<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans classpath:springxsds/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch classpath:springxsds/spring-batch-2.1.xsd
		http://www.springframework.org/schema/aop classpath:springxsds/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx classpath:springxsds/spring-tx-2.0.xsd">

	<beans:import resource="classpath:rrfBaseLoader.xml" />
	<beans:import resource="classpath:metaLoaderStaging.xml" />

	<beans:bean class="org.springframework.batch.core.scope.StepScope" />

	<job id="metaJob" restartable="true">
		<listeners>
			<listener ref="cachingSupportedAttribuiteTemplate" />
			<listener ref="jobSetupListener" />
			<listener ref="cleanupListener" />
		</listeners>

		<step id="loadCodingScheme" next="registerCodingScheme">
			<tasklet ref="metaCodingSchemeLoadingTasklet" />
		</step>

		<step id="registerCodingScheme" next="loadHardcodedValues">
			<tasklet ref="registeringTasklet" />
		</step>

		<step id="loadHardcodedValues" next="generateMrsabMetadataXml">
			<tasklet ref="hardcodedValuesLoadingTasklet" />
		</step>

		<step id="generateMrsabMetadataXml" next="generateMrdocMetadataXml">
			<tasklet>
				<listeners>
					<listener ref="stepCompletionListener" />
				</listeners>
				<chunk reader="mrsabReader" writer="mrsabXmlWriter"
					commit-interval="1">
				</chunk>
			</tasklet>
		</step>

		<step id="generateMrdocMetadataXml" next="loadEntitiesAndRelationships">
			<tasklet>
				<listeners>
					<listener ref="stepCompletionListener" />
				</listeners>
				<chunk reader="mrdocReader" writer="mrdocXmlWriter"
					commit-interval="1">
				</chunk>
			</tasklet>
		</step>

		<split id="loadEntitiesAndRelationships" task-executor="taskExecutor">
	
			<flow>
				<step id="loadEntities" parent="metaLoadEntitiesPartitioned" next="index" />
	
				<step id="index">
					<tasklet ref="indexingTasklet" />
				</step>
			</flow>
	
			<flow>
				<step id="loadAssociations" parent="listenerStep" next="processAssociations">
					<tasklet>
						<listeners>
							<listener ref="stepCompletionListener" />
						</listeners>
						<chunk reader="metaMrrelSkippingReader" processor="metaEntityAssocToEntityProcessor"
							writer="associationSourceWriter" commit-interval="50">
							<streams>
								<stream ref="mrrelReader" />
							</streams>
						</chunk>
					</tasklet>
				</step>
				<step id="processAssociations" next="processMrSatAssocQualifiers">
						<tasklet>
							<chunk reader="mrdocAssociationGroupReader" processor="metaAssociationProcessor"
								writer="entityListWriter" commit-interval="1">
								<streams>
									<stream ref="mrdocReader" />
								</streams>
							</chunk>
						</tasklet>
					</step>	
			  <step id="processMrSatAssocQualifiers">
			  			<tasklet>
							<chunk reader="metaMrsatRuiSkippingReader" processor="metasMrsatQualifierProcessor"
								 writer="associationQualifierWriter" commit-interval="10000" skip-limit="100000">
								<streams>
									<stream ref="mrsatReader" />
								</streams>
								<skippable-exception-classes>
									<include class="org.lexgrid.loader.database.key.KeyNotFoundException"/>
								</skippable-exception-classes>
							</chunk>
						</tasklet>
			  </step>
						
			</flow>
		</split>
		
	</job>

	<beans:bean id="codingSchemeNameSettingProcessor" abstract="true">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
	</beans:bean>

	<beans:bean id="metaRelationResolver" abstract="true">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
	</beans:bean>
	
	<!-- start partitioning -->
	
	<!--  EntityProcessing below -->
	<beans:bean id="metaLoadEntitiesPartitioned"
		class="org.springframework.batch.core.partition.support.PartitionStep">
		<beans:property name="partitionHandler"
			ref="metaLoadEntitiesPartitionHandler" />
		<beans:property name="stepExecutionSplitter"
			ref="metaLoadEntitiesExecutionSplitter" />
		<beans:property name="jobRepository" ref="jobRepository" />
	</beans:bean>

	<beans:bean id="metaLoadEntitiesExecutionSplitter"
		class="org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter">
		<beans:constructor-arg index="0" ref="jobRepository" />
		<beans:constructor-arg index="1"
			ref="metaPartitionedLoadEntities" />
		<beans:constructor-arg index="2">
			<beans:bean class="org.lexgrid.loader.rrf.partition.RrfFilePartitioner" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="metaLoadEntitiesPartitionHandler"
		class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
		<beans:property name="taskExecutor" ref="taskExecutor" />
		<beans:property name="step"
			ref="metaPartitionedLoadEntities" />
		<beans:property name="gridSize" value="10" />
	</beans:bean>

	<step id="metaPartitionedLoadEntities" parent="listenerStep">
		<tasklet>
			<listeners>
				<listener ref="stepCompletionListener" />
			</listeners>
			<chunk reader="metaTotalEntityCompositeReader" processor="metaTotalEntityProcessor"
				writer="entityWriter" commit-interval="50">
					<streams>
						<stream ref="mrconsoReader" />
						<stream ref="mrsatReader" />
						<stream ref="mrdefReader" />
						<stream ref="mrstyReader" />
					</streams>
			</chunk>
		</tasklet>
	</step>
	
	<!-- Mrsat processing below -->
	
	<beans:bean id="metaLoadMrsatPropertiesPartitioned"
		class="org.springframework.batch.core.partition.support.PartitionStep">
		<beans:property name="partitionHandler"
			ref="metaLoadMrsatPropertiesPartitionHandler" />
		<beans:property name="stepExecutionSplitter"
			ref="metaLoadMrsatPropertiesExecutionSplitter" />
		<beans:property name="jobRepository" ref="jobRepository" />
	</beans:bean>

	<beans:bean id="metaLoadMrsatPropertiesExecutionSplitter"
		class="org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter">
		<beans:constructor-arg index="0" ref="jobRepository" />
		<beans:constructor-arg index="1"
			ref="metaPartitionedLoadMrsatProperties" />
		<beans:constructor-arg index="2">
			<beans:bean class="org.lexgrid.loader.rrf.partition.RrfFilePartitioner" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="metaLoadMrsatPropertiesPartitionHandler"
		class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
		<beans:property name="taskExecutor" ref="taskExecutor" />
		<beans:property name="step"
			ref="metaPartitionedLoadMrsatProperties" />
		<beans:property name="gridSize" value="10" />
	</beans:bean>


	<step id="metaPartitionedLoadMrsatProperties">
		<tasklet>
			<listeners>
				<listener ref="stepCompletionListener" />
			</listeners>
			<chunk reader="partitionedMrsatReader" processor="qualifierAddingMetaMrsatProcessor"
				writer="entityPropertyWriter" commit-interval="500">
					<streams>
					<stream ref="mrsatReader" />
				</streams>
			</chunk>
		</tasklet>
	</step>
	
	<beans:bean id="metasMrsatQualifierProcessor" parent="metaDefaultPropertyProcessor"
		class="org.lexgrid.loader.processor.EntityAsscToEntityMrsatQualsProcessor">	
		<beans:property name="supportedAttributeTemplate" ref="cachingSupportedAttribuiteTemplate" />
					
		<beans:property name="associationInstanceIdResolver">
			<beans:bean class="org.lexgrid.loader.rrf.data.association.MrsatRuiAssociationInstanceIdResolver"/>
		</beans:property>		
 
		<beans:property name="qualifierResolver">
			<beans:bean class="org.lexgrid.loader.rrf.processor.support.MrsatRuiAssocQualResolver" />	
		</beans:property>
	</beans:bean>

	<!-- Relation Processing Below -->

	<beans:bean id="metaLoadAssocsPartioned"
		class="org.springframework.batch.core.partition.support.PartitionStep">
		<beans:property name="partitionHandler"
			ref="metaLoadAssocsPartitionHandler" />
		<beans:property name="stepExecutionSplitter"
			ref="metaLoadAssocsExecutionSplitter" />
		<beans:property name="jobRepository" ref="jobRepository" />
	</beans:bean>

	<beans:bean id="metaLoadAssocsExecutionSplitter"
		class="org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter">
		<beans:constructor-arg index="0" ref="jobRepository" />
		<beans:constructor-arg index="1"
			ref="metaPartitionedLoadAssociations" />
		<beans:constructor-arg index="2">
			<beans:bean class="org.lexgrid.loader.rrf.partition.RrfFilePartitioner" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="metaLoadAssocsPartitionHandler"
		class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
		<beans:property name="taskExecutor" ref="taskExecutor" />
		<beans:property name="step"
			ref="metaPartitionedLoadAssociations" />
		<beans:property name="gridSize" value="10" />
	</beans:bean>


	<step id="metaPartitionedLoadAssociations" parent="listenerStep">
		<tasklet>
			<listeners>
				<listener ref="stepCompletionListener" />
			</listeners>
			<chunk reader="metaMrrelPartitionedSkippingReader" processor="metaEntityAssocToEntityProcessor"
				writer="associationSourceWriter" commit-interval="50">
				<streams>
					<stream ref="mrrelReader" />
				</streams>
			</chunk>
		</tasklet>
	</step>
	
	<beans:bean id="metaMrrelPartitionedSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.rrf.reader.support.MrrelRelationBasedSkipPolicy">
				<beans:property name="forwardNameList">
					<beans:ref bean="relationForwardNameFactory" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="partitionedMrrelReader" />
		</beans:property>
	</beans:bean>

	<!-- end partitioning -->

	<beans:bean id="metaTotalEntityProcessor" 
		class="org.lexgrid.loader.meta.processor.MetaTotalEntityProcessor">
		<beans:property name="mrconsoGroupEntityProcessor" ref="entityListProcessor"/>
		<beans:property name="mrdefItemProcessor" ref="qualifierAddingMetaDefinitionProcessor"/>
		<beans:property name="mrstyItemProcessor" ref="metaMrstyPropertyProcessor"/>
		<beans:property name="mrsatItemProcessor" ref="qualifierAddingMetaMrsatProcessor"/>
	</beans:bean>
	
	<beans:bean id="metaTotalEntityCompositeReader"
		class="org.lexgrid.loader.reader.CompositeGroupItemReader" scope="step">
		<beans:property name="masterGroupItemReader" ref="decoratedMetaMrconsoMrsatCompositeReader"/>
		<beans:property name="slaveGroupItemReader" ref="decoratedMetaMrstyMrdefCompositeReader"/>
		<beans:property name="compositeGroupComparator">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.TotalEntityCompositeGroupComparator" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="decoratedMetaMrconsoMrsatCompositeReader"
		class="org.lexgrid.loader.reader.decorator.SingleItemToListReaderDecorator" scope="step">
		<beans:constructor-arg ref="metaMrconsoMrsatCompositeReader"/>
	</beans:bean>
	
	<beans:bean id="decoratedMetaMrstyMrdefCompositeReader"
		class="org.lexgrid.loader.reader.decorator.SingleItemToListReaderDecorator" scope="step">
		<beans:constructor-arg ref="metaMrstyMrdefCompositeReader"/>
	</beans:bean>
	
	<beans:bean id="metaMrconsoMrsatCompositeReader"
		class="org.lexgrid.loader.reader.CompositeGroupItemReader" scope="step">
		<beans:property name="masterGroupItemReader" ref="partitionedMetaMrconsoGroupReader"/>
		<beans:property name="slaveGroupItemReader" ref="partitionedMetaMrsatGroupReader"/>
		<beans:property name="compositeGroupComparator">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MrconsoMrsatCompositeGroupComparator" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="metaMrstyMrdefCompositeReader"
		class="org.lexgrid.loader.reader.CompositeGroupItemReader" scope="step">
		<beans:property name="masterGroupItemReader" ref="partitionedMetaMrstyGroupReader"/>
		<beans:property name="slaveGroupItemReader" ref="partitionedMetaMrdefGroupReader"/>
		<beans:property name="compositeGroupComparator">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MrstyMrdefCompositeGroupComparator" />
		</beans:property>
	</beans:bean>
	

	<beans:bean id="metaMrrelGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" parent="mrrelGroupReader"
		scope="step">
		<beans:property name="groupDiscriminator">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MrrelMetaEntityGroupDiscriminator" />
		</beans:property>
	</beans:bean>

	<beans:bean id="partitionedMetaMrconsoGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" parent="partitionedMrconsoGroupReader"
		scope="step">
		<beans:property name="groupDiscriminator">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MrconsoMetaEntityGroupDiscriminator" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="partitionedMetaMrstyGroupReader" 
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" parent="partitionedMrstyGroupReader"
			scope="step">
			<beans:property name="groupDiscriminator">
				<beans:bean
					class="org.lexgrid.loader.meta.reader.support.MrstyMetaEntityGroupDiscriminator" />
			</beans:property>
	</beans:bean>
	
	<beans:bean id="partitionedMetaMrsatGroupReader" 
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" parent="partitionedMrsatGroupReader"
			scope="step">
			<beans:property name="groupDiscriminator">
				<beans:bean
					class="org.lexgrid.loader.meta.reader.support.MrsatMetaEntityGroupDiscriminator" />
			</beans:property>
	</beans:bean>
	
	<beans:bean id="partitionedMetaMrdefGroupReader"
		class="org.lexgrid.loader.reader.BufferedGroupItemReader" parent="partitionedMrdefGroupReader"
		scope="step">
		<beans:property name="groupDiscriminator">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MrdefMetaEntityGroupDiscriminator" />
		</beans:property>
	</beans:bean>

	<beans:bean id="auiToCuiProcessor"
		class="org.lexgrid.loader.meta.staging.processor.AuiToCuiProcessor" />

	<beans:bean id="auiToCuiDao" class="org.lexgrid.loader.staging.dao.KeyValueDao">
		<beans:property name="dataSource">
			<beans:ref bean="dataSource" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="qualifierAddingMetaMrsatProcessor"
		class="org.lexgrid.loader.processor.decorator.EntityPropertyQualifierAndSourceAddingDecorator">
		<beans:constructor-arg ref="metaMrsatPropertyProcessor"/>
		<beans:property name="sourceResolvers">
			<beans:list>
				<beans:ref bean="metaMrsatSourceResolver"/>
			</beans:list>
		</beans:property>
		<beans:property name="qualifierResolvers">
			<beans:list>
				<beans:ref bean="metaMrsatMetaAuiResolver" />
				<beans:ref bean="mrsatMultiAttribStypeResolver" />
				<beans:ref bean="mrsatMultiAttribSuppressResolver" />
			</beans:list>
		</beans:property>	
	
	</beans:bean>
	
    <beans:bean id="qualifierAddingMetaDefinitionProcessor"
		class="org.lexgrid.loader.processor.decorator.EntityPropertyQualifierAndSourceAddingDecorator">
		<beans:constructor-arg ref="metaDefinitionProcessor"/>
		<beans:property name="sourceResolvers">
			<beans:list>
				<beans:ref bean="metaMrdefSourceResolver"/>
			</beans:list>
		</beans:property>
		<beans:property name="qualifierResolvers">
			<beans:list>
				<beans:ref bean="mrdefAuiPropertyQualifierResolver" />
				<beans:ref bean="mrdefAtuiPropertyQualifierResolver" />
				<beans:ref bean="mrdefSuppressPropertyQualifierResolver" />
				<beans:ref bean="mrdefCvfPropertyQualifierResolver" />
				<beans:ref bean="mrdefSatuiPropertyQualifierResolver" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="metaDefinitionProcessor"
		class="org.lexgrid.loader.processor.EntityPropertyProcessor" parent="metaDefaultPropertyProcessor">
		<beans:property name="propertyResolver">
			<beans:ref bean="metaDefinitionPropertyResolver"/>
		</beans:property>
		<beans:property name="entityKeyResolver">
			<beans:bean class="org.lexgrid.loader.database.key.NoopEntityKeyResolver"/>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="metaMrsatPropertyProcessor"
		class="org.lexgrid.loader.processor.EntityPropertyProcessor" parent="metaDefaultPropertyProcessor">
		<beans:property name="entityKeyResolver">
			<beans:bean class="org.lexgrid.loader.database.key.NoopEntityKeyResolver"/>
		</beans:property>
		<beans:property name="propertyResolver">
			<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaMrsatPropertyResolver">
				<beans:property name="entityCodeResolver">
					<beans:bean
						class="org.lexgrid.loader.meta.processor.support.MetaMrsatEntityCodeResolver" />
				</beans:property>
				<beans:property name="entityNamespaceResolver">
					<beans:ref bean="metaEntityNamespaceResolver" />
				</beans:property>
				<beans:property name="individualIdSetter">
					<beans:bean
						class="org.lexgrid.loader.meta.data.property.MetaMrsatIndividualIdSetter" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="metaMrstyPropertyProcessor"
		class="org.lexgrid.loader.processor.EntityPropertyProcessor" parent="metaDefaultPropertyProcessor">
		<beans:property name="entityKeyResolver">
			<beans:bean class="org.lexgrid.loader.database.key.NoopEntityKeyResolver"/>
		</beans:property>
		<beans:property name="propertyResolver">
			<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaMrstySemanticTypePropertyResolver">
				<beans:property name="entityCodeResolver">
					<beans:bean
						class="org.lexgrid.loader.meta.processor.support.MetaMrstyEntityCodeResolver" />
				</beans:property>
				<beans:property name="entityNamespaceResolver">
					<beans:ref bean="metaEntityNamespaceResolver" />
				</beans:property>
				<beans:property name="individualIdSetter">
					<beans:bean
						class="org.lexgrid.loader.meta.data.property.MetaMrstyIndividualIdSetter" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="entityProcessor"
		class="org.lexgrid.loader.processor.EntityProcessor" parent="codingSchemeNameSettingProcessor">
		<beans:property name="entityResolver">
			<beans:ref bean="metaEntityResolver" />
		</beans:property>
	</beans:bean>

	<!-- Start MRCONSO Qualifier Resolvers -->
	<beans:bean id="baseMrconsoPropertyQualifierResolver" abstract="true"
		class="org.lexgrid.loader.processor.support.AbstractBasicPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="metaMrconsoSourceResolver" 
		class="org.lexgrid.loader.meta.processor.support.MetaMrconsoSourceResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrconsoSourceCodePropertyQualifierResolver" 
		class="org.lexgrid.loader.meta.processor.support.MetaSourceCodePropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrconsoLuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoLuiPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrconsoSuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoSuiPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
		
		<beans:bean id="mrconsoSauiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoSauiPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
			
	<beans:bean id="mrconsoSduiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoSduiPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrconsoScuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoScuiPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
		
		<beans:bean id="mrconsoSuppressPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoSuppressPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
		<beans:bean id="mrconsoCvfPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoCvfPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrrankMultiattributeResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrrankPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
		<beans:property name="mrRankUtility">
			<beans:ref bean="mrrankUtility" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="mrconsoAuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrconsoAuiPropertyQualifierResolver"
		parent="baseMrconsoPropertyQualifierResolver">
	</beans:bean>
	
	<!-- End MRCONSO Qualifier Resolvers -->
	
	<!-- Start MRDEF Qualifier Resolvers -->
	<beans:bean id="baseMrdefPropertyQualifierResolver" abstract="true"
		class="org.lexgrid.loader.processor.support.AbstractBasicPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="metaMrdefSourceResolver"
		class="org.lexgrid.loader.meta.processor.support.MetaMrdefSourceResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrdefAuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrdefAuiPropertyQualifierResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrdefAtuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrdefAtuiPropertyQualifierResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrdefSuppressPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrdefSuppressPropertyQualifierResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrdefCvfPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrdefCvfPropertyQualifierResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrdefSatuiPropertyQualifierResolver" 
		class="org.lexgrid.loader.rrf.processor.support.MrdefSatuiPropertyQualifierResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrdefSourceResolver" 
		class="org.lexgrid.loader.meta.processor.support.MetaMrdefSourceResolver"
		parent="baseMrdefPropertyQualifierResolver">
	</beans:bean>

	<!-- End MRDEF Qualifier Resolvers -->
	
	<beans:bean id="entityAssnEQualsProcessor"
		class="org.lexgrid.loader.processor.EntityAssnToEQualsListProcessor"
		parent="codingSchemeNameSettingProcessor">
		<beans:property name="supportedAttributeTemplate">
			<beans:ref bean="cachingSupportedAttribuiteTemplate" />
		</beans:property>
		
	</beans:bean>

	<beans:bean id="entityListProcessor"
		class="org.lexgrid.loader.rrf.processor.MrconsoGroupEntityProcessor">
		<beans:property name="presentationResolver">
		<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaPresentationPropertyResolver">
				<beans:property name="entityCodeResolver">
					<beans:bean
						class="org.lexgrid.loader.meta.processor.support.MetaMrconsoEntityCodeResolver" />
				</beans:property>
				<beans:property name="entityNamespaceResolver">
					<beans:ref bean="metaEntityNamespaceResolver" />
				</beans:property>
				<beans:property name="individualIdSetter">
					<beans:bean
						class="org.lexgrid.loader.meta.data.property.MetaMrconsoIndividualIdSetter" />
				</beans:property>
			</beans:bean>
		</beans:property>
		
		<beans:property name="sourceResolvers">
			<beans:list>
				<beans:ref bean="metaMrconsoSourceResolver"/>
			</beans:list>
		</beans:property>
		
		<beans:property name="qualifierResolvers">
			<beans:list>
					<beans:ref bean="mrconsoSourceCodePropertyQualifierResolver"/>
					<beans:ref bean="mrconsoLuiPropertyQualifierResolver"/>
					<beans:ref bean="mrconsoSuiPropertyQualifierResolver"/>
					<beans:ref bean="mrconsoSauiPropertyQualifierResolver"/>
					<beans:ref bean="mrconsoSduiPropertyQualifierResolver"/>
					<beans:ref bean="mrconsoScuiPropertyQualifierResolver"/>
					<beans:ref bean="mrconsoSuppressPropertyQualifierResolver" />
					<beans:ref bean="mrconsoCvfPropertyQualifierResolver" />
					<beans:ref bean="mrrankMultiattributeResolver" />
					<beans:ref bean="mrconsoAuiPropertyQualifierResolver" />
			</beans:list>
		</beans:property>
		
		<beans:property name="supportedAttributeTemplate" ref="cachingSupportedAttribuiteTemplate" />
		<beans:property name="sortingListProcessor">
			<beans:bean
				class="org.lexgrid.loader.processor.SortingListProcessor">
				<beans:property name="propertyComparator">
					<beans:ref bean="propertyComparator" />
				</beans:property>
				<beans:property name="delegate"
					ref="entityProcessor" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="metaCodingSchemeLoadingTasklet"
		class="org.lexgrid.loader.meta.tasklet.MetaCodingSchemeLoadingTasklet">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="codingSchemeProperties" ref="codingSchemeProperties"/>
	</beans:bean>
	
	<beans:bean id="metaEntityAssocToEntityProcessor"
		class="org.lexgrid.loader.processor.EntityAssnsToEntityProcessor"
		parent="codingSchemeNameSettingProcessor">
		
		<beans:property name="supportedAttributeTemplate" ref="cachingSupportedAttribuiteTemplate" />
		
		<beans:property name="associationInstanceIdResolver">
			<beans:bean class="org.lexgrid.loader.rrf.data.association.MrrelRuiAssociationInstanceIdResolver"/>
		</beans:property>		
	
		<beans:property name="associationPredicateKeyResolver" ref="associationPredicateKeyResolver"/>
		
		<beans:property name="databaseServiceManager" ref="databaseServiceManager"/>
					
		<beans:property name="qualifierResolvers">
		<beans:list>
				<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaSourceQualifierResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.RelaAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.meta.processor.support.SourceAuiAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.meta.processor.support.TargetAuiAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.meta.processor.support.SelfReferencingAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.Stype1AssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.Stype2AssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.SruiAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.RgAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.SuppressAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.CvfAssocQualResolver" />
				<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.RuiAssocQualResolver" />		
		</beans:list>
		</beans:property>
	
		<beans:property name="sourcePropertyIdResolver">
			<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.MrrelAuiPropertyIdResolver">
				<beans:property name="aui" value="AUI2" />
			</beans:bean>
		</beans:property>
	
		<beans:property name="targetPropertyIdResolver">
			<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.MrrelAuiPropertyIdResolver">
				<beans:property name="aui" value="AUI1" />
			</beans:bean>
		</beans:property>
					
		<beans:property name="relationResolver">
			<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaRelationResolver"
				parent="metaRelationResolver" />
		</beans:property>
	</beans:bean>

	<beans:bean id="metaAssociationProcessor" parent="associationProcessor">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
	</beans:bean>

	<beans:bean id="codingSchemeProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<beans:property name="location">
			<beans:value>classpath:metaConstants.props
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="metaCodingSchemeIdSetter"
		class="org.lexgrid.loader.meta.data.codingscheme.MetaCodingSchemeIdSetter">
		<beans:property name="codingSchemeProperties">
			<beans:ref local="codingSchemeProperties" />
		</beans:property>
		<beans:property name="isoMap">
			<beans:ref bean="isoMap" />
		</beans:property>
		<beans:property name="mrdocReader">
			<beans:ref bean="mrdocCodingSchemeIdReader" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="mrdocCodingSchemeIdReader" parent="mrdocReader"/>

    <!--  Start MRSAT qualifiers -->
	<beans:bean id="metaMrsatSourceResolver"
		class="org.lexgrid.loader.meta.processor.support.MetaMrsatSourceResolver">
	</beans:bean>
			
	<beans:bean id="metaMrsatMetaAuiResolver"
		class="org.lexgrid.loader.meta.processor.support.MetaMrsatMetauiPropertyQualifierResolver">
	</beans:bean>
			
	<beans:bean id="mrsatMultiAttribStypeResolver"
		class="org.lexgrid.loader.meta.processor.support.MetaMrsatStypePropertyQualifierResolver">
	</beans:bean>
	
	<beans:bean id="mrsatMultiAttribSuppressResolver"
		class="org.lexgrid.loader.meta.processor.support.MetaMrsatSuppressPropertyQualifierResolver">
	</beans:bean>
	<!--  End MRSAT qualifiers -->

	<beans:bean id="metaEntityResolver"
		class="org.lexgrid.loader.meta.processor.support.MetaEntityResolver">
		<beans:property name="entityNamespaceResolver">
			<beans:ref bean="metaEntityNamespaceResolver" />
		</beans:property>
		<beans:property name="entityDescriptionResolver">
			<beans:bean
				class="org.lexgrid.loader.rrf.processor.support.DefaultMrconsoEntityDescriptionResolver" />
		</beans:property>
		<beans:property name="entityCodeResolver">
			<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaMrconsoEntityCodeResolver" />
		</beans:property>
	</beans:bean>

	<beans:bean id="metaMrrelSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MetaMrrelRelationSkipPolicy"/>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="mrrelReader" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="metaMrsatRuiSkippingReader"
		class="org.lexgrid.loader.reader.SkippingItemReader">
		<beans:property name="skipPolicy">
			<beans:bean
				class="org.lexgrid.loader.meta.reader.support.MetaMrsatAssQualSkipPolicy"/>
		</beans:property>
		<beans:property name="delegate">
			<beans:ref bean="mrsatReader" />
		</beans:property>
	</beans:bean>

	<beans:bean id="metaEntityNamespaceResolver"
		class="org.lexgrid.loader.processor.support.SameAsCodingSchemeNameEntityNamespaceResolver">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
	</beans:bean>

	<beans:bean id="hardcodedValuesLoadingTasklet" 
				class="org.lexgrid.loader.meta.hardcodedvalues.MetaHardcodedValuesTasklet">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="supportedAttributeTemplate">
			<beans:ref bean="cachingSupportedAttribuiteTemplate" />
		</beans:property>
		<beans:property name="databaseServiceManager" ref="databaseServiceManager"/>
	</beans:bean>

	<beans:bean id="registeringTasklet" parent="abstractLexEvsUtilityTasklet"
		class="org.lexgrid.loader.lexbigadmin.RegisteringTasklet">
		<beans:property name="retry" value="${retry}"/>
		<beans:property name="prefix" value="${prefix}"/>
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
	</beans:bean>

	<beans:bean id="indexingTasklet" parent="abstractLexEvsUtilityTasklet"
		class="org.lexgrid.loader.lexbigadmin.IndexingTasklet">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="retry" value="${retry}"/>
	</beans:bean>
	
	<beans:bean id="mrsabMetadataLoadingTasklet" parent="abstractLexEvsUtilityTasklet"
		class="org.lexgrid.loader.lexbigadmin.MetadataLoadingTasklet">
		<beans:property name="inputResource" value="file:/${user.home}/NciMetadata.xml" />
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="deleteXmlAfterLoad" value="false"/>
	</beans:bean>
	
	<beans:bean id="mrdocMetadataLoadingTasklet" parent="abstractLexEvsUtilityTasklet"
		class="org.lexgrid.loader.lexbigadmin.MetadataLoadingTasklet">
		<beans:property name="inputResource" value="file:/${user.home}/NciMrdocMetadata.xml" />
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="deleteXmlAfterLoad" value="false"/>
	</beans:bean>

	<beans:bean id="metaDefaultPropertyProcessor" abstract="true">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="supportedAttributeTemplate">
			<beans:ref bean="cachingSupportedAttribuiteTemplate" />
		</beans:property>
	</beans:bean>

	<beans:bean id="cleanupListener" parent="abstractCleanupListener"
	class="org.lexgrid.loader.listener.CleanupListener">
		<beans:property name="stagingManager" ref="metaStagingManager" />
		<beans:property name="codingSchemeIdSetter" ref="metaCodingSchemeIdSetter" />
	</beans:bean>
	
	<beans:bean id="metaMrconsoStagingDao" class="org.lexgrid.loader.meta.staging.MetaJdbcMrconsoStagingDao"
		parent="mrconsoStagingDao"/>
		
	<beans:bean id="transitivityBuildingTasklet" parent="abstractLexEvsUtilityTasklet"
		class="org.lexgrid.loader.lexbigadmin.TransitivityBuildingTasklet">
		<beans:property name="codingSchemeIdSetter">
			<beans:ref local="metaCodingSchemeIdSetter" />
		</beans:property>
		<beans:property name="retry" value="${retry}"/>
		<beans:property name="skip" value="true"/>
	</beans:bean>
	
	<beans:bean id="mrsabXmlWriter"
		class="org.lexgrid.loader.writer.NoClosingRootTagStaxEventItemWriter">
		<beans:property name="resource" value="file:/${user.home}/NciMetadata.xml" />
		<beans:property name="marshaller" ref="mrsabXmlMarshaller" />
		<beans:property name="overwriteOutput" value="true" />
	</beans:bean>

	<beans:bean id="mrsabXmlMarshaller"
		class="org.springframework.oxm.xstream.XStreamMarshaller">
		<beans:property name="aliases">
			<beans:map>
				<beans:entry key="mrsabEntry" value="org.lexgrid.loader.rrf.model.Mrsab" />
			</beans:map>
		</beans:property>
	</beans:bean>
	
		<beans:bean id="mrdocXmlWriter"
		class="org.lexgrid.loader.writer.NoClosingRootTagStaxEventItemWriter">
		<beans:property name="resource" value="file:/${user.home}/NciMrdocMetadata.xml" />
		<beans:property name="marshaller" ref="mrsabXmlMarshaller" />
		<beans:property name="overwriteOutput" value="true" />
	</beans:bean>

	<beans:bean id="mrdocXmlMarshaller"
		class="org.springframework.oxm.xstream.XStreamMarshaller">
		<beans:property name="aliases">
			<beans:map>
				<beans:entry key="mrdocEntry" value="org.lexgrid.loader.rrf.model.Mrdoc" />
			</beans:map>
		</beans:property>
	</beans:bean>

	<beans:bean id="metaDefinitionPropertyResolver"
		class="org.lexgrid.loader.rrf.processor.support.DefaultDefinitionPropertyResolver">
		<beans:property name="individualIdSetter">
			<beans:bean
				class="org.lexgrid.loader.rrf.data.property.MrdefAtuiIndividualIdSetter" />
		</beans:property>
		<beans:property name="entityCodeResolver">
			<beans:bean
				class="org.lexgrid.loader.meta.processor.support.MetaMrdefEntityCodeResolver">
			</beans:bean>
		</beans:property>
		<beans:property name="entityNamespaceResolver">
			<beans:ref bean="metaEntityNamespaceResolver" />
		</beans:property>
	</beans:bean>
	
	<!-- Not used yet 
	<beans:bean id="beanTruncator"
		class="org.lexgrid.loader.processor.support.BeanReflectionTruncator">
		<beans:property name="fieldsToTruncate">
			<beans:map>
				<beans:entry key="id.idValue" value="190"/>
			</beans:map>
		</beans:property>	
	</beans:bean>
	-->
	
	<beans:bean id="associationPredicateKeyResolver" 
		class="org.lexgrid.loader.database.key.AssociationPredicateCreatingKeyResolver">
		<beans:property name="databaseServiceManager" ref="databaseServiceManager"/>
	</beans:bean>
	
	<beans:bean id="databaseServiceEntityKeyResolver" 
		class="org.lexgrid.loader.database.key.DatabaseServiceEntityKeyResolver">
		<beans:property name="databaseServiceManager" ref="databaseServiceManager"/>
	</beans:bean>
	
</beans:beans>
