<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Mon Apr 18 08:46:17 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PickList">

	
	<resultMap id="pickListDefinitionResult" type="pickListDefinition">
		<result property="pickListId" column="pickListId"/>
		<result property="representsValueSetDefinition" column="representsValueSetDefinition"/>
		<result property="defaultEntityCodeNamespace" column="defaultEntityCodeNamespace"/>
		<result property="defaultLanguage" column="defaultLanguage"/>
		<result property="defaultSortOrder" column="defaultSortOrder"/>
		<result property="completeSet" column="completeSet" />
		<result property="entityDescription.content" column="description"/>
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner"/>
		<result property="status" column="status"/>
		<result property="effectiveDate" column="effectiveDate"/>
		<result property="expirationDate" column="expirationDate"/>
	</resultMap>
	
	<resultMap id="pickListDefinitionMetaData" type="insertPickListDefinitionBean">
		<result property="uid" column="vsPickListGuid" />
		<result property="pickListDefinition.pickListId" column="pickListId"/>
		<result property="pickListDefinition.representsValueSetDefinition" column="representsValueSetDefinition"/>
		<result property="pickListDefinition.completeSet" column="completeSet" />
		<result property="pickListDefinition.defaultEntityCodeNamespace" column="defaultEntityCodeNamespace"/>
		<result property="pickListDefinition.defaultLanguage" column="defaultLanguage"/>
		<result property="pickListDefinition.defaultSortOrder" column="defaultSortOrder"/>		
		<result property="pickListDefinition.entityDescription.content" column="description"/>
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="pickListDefinition.isActive" column="isActive" />
		<result property="pickListDefinition.owner" column="owner"/>
		<result property="pickListDefinition.status" column="status"/>
		<result property="pickListDefinition.effectiveDate" column="effectiveDate"/>
		<result property="pickListDefinition.expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
	</resultMap>
		
	<resultMap id="pickListDefinitionMetaDataWithMultiAttrib" type="insertPickListDefinitionBean">
		<result property="uid" column="vsPickListGuid" />
		<result property="pickListDefinition.pickListId" column="pickListId"/>
		<result property="pickListDefinition.representsValueSetDefinition" column="representsValueSetDefinition"/>
		<result property="pickListDefinition.completeSet" column="completeSet" />
		<result property="pickListDefinition.defaultEntityCodeNamespace" column="defaultEntityCodeNamespace"/>
		<result property="pickListDefinition.defaultLanguage" column="defaultLanguage"/>
		<result property="pickListDefinition.defaultSortOrder" column="defaultSortOrder"/>		
		<result property="pickListDefinition.entityDescription.content" column="description"/>
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="pickListDefinition.isActive" column="isActive" />
		<result property="pickListDefinition.owner" column="owner"/>
		<result property="pickListDefinition.status" column="status"/>
		<result property="pickListDefinition.effectiveDate" column="effectiveDate"/>
		<result property="pickListDefinition.expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
		<collection property="vsMultiAttribList" resultMap="VSMultiAttrib.vsMultiAttribResultBean"/>
	</resultMap>
	
	<select id="getPickListIds" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			pickListId
		FROM
			${prefix}vsPickList
	</select>
	
	<select id="getPickListGuidByPickListId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="Common.uidResult">
		SELECT
			vsPickListGuid AS uidKey
		FROM
			${prefix}vsPickList pickListDef
		WHERE
			pickListDef.pickListId = #{param1}
	</select>
	
	<select id="getPickListDefinitionMetadataByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="pickListDefinitionMetaDataWithMultiAttrib">
		SELECT
			pl.vsPickListGuid,
			pl.pickListId,
			pl.representsValueSetDefinition,
			pl.completeSet,
			pl.defaultEntityCodeNamespace,
			pl.defaultLanguage,
			pl.defaultSortOrder,
			pl.description,
			pl.releaseGuid,
			pl.isActive,
			pl.owner,
			pl.status,
			pl.effectiveDate,
			pl.expirationDate,
			pl.entryStateGuid,
			vsMulti.vsMultiAttribGuid,
			vsMulti.referenceGuid,
			vsMulti.referenceType,
			vsMulti.attributeType,
			vsMulti.attributeValue,
			vsMulti.subRef,
			vsMulti.role,
			vsMulti.entryStateGuid esGuid				
		FROM
			${prefix}vsPickList pl
		LEFT JOIN
			${prefix}vsMultiAttrib vsMulti
		ON
			vsMulti.referenceGuid = pl.vsPickListGuid
		WHERE
			pl.vsPickListGuid = #{param1}
	</select>
	
	<select id="getPickListEntryNodeGuidByPickListIdAndPLEntryId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Common.uidResult">
		SELECT
			vsPLEntryGuid AS uidKey
		FROM
			${prefix}vsPLEntry
		WHERE
			vsPickListGuid = #{param1}
		AND
			plEntryId = #{param2}
	</select>
	
	<select id="getPickListDefinitionByPickListId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="pickListDefinitionResult">
		SELECT
			pickListDef.pickListId,
			pickListDef.representsValueSetDefinition,
			pickListDef.completeSet,
			pickListDef.defaultEntityCodeNamespace,
			pickListDef.defaultLanguage,
			pickListDef.defaultSortOrder,
			pickListDef.description,			
			pickListDef.isActive,
			pickListDef.owner,
			pickListDef.status,
			pickListDef.effectiveDate,
			pickListDef.expirationDate
		FROM
			${prefix}vsPickList pickListDef
		WHERE
			pickListDef.pickListId = #{param1}
	</select>
     
     <select id="getPickListDefinitionIdForValueSetDefinitionUri" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			pickListDef.pickListId
		FROM
			${prefix}vsPickList pickListDef
		WHERE
			pickListDef.representsValueSetDefinition = #{param1}
	</select>
	
	<select id="getPickListDefinitionIdForEntityCodeAndEntityNamespace" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="string">
		SELECT
			pickListDef.pickListId
		FROM
			${prefix}vsPickList pickListDef,
			${prefix}vsPLEntry plEntry
		WHERE
			plEntry.entityCode = #{param1}
		AND
			plEntry.entityCode = #{param2}
		AND
			plEntry.vsPickListGuid = pickListDef.vsPickListGuid
	</select>
	
	<select id="getPickListDefinitionIdForEntityCodeEntityNamespaceAndPropertyId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple" resultType="string">
		SELECT
			pickListDef.pickListId
		FROM
			${prefix}vsPickList pickListDef,
			${prefix}vsPLEntry plEntry
		WHERE
			plEntry.entityCode = #{param1}
		AND
			plEntry.entityCode = #{param2}
		AND
			plEntry.propertyId = #{param3}
		AND
			plEntry.vsPickListGuid = pickListDef.vsPickListGuid
	</select>
	
	<insert id="insertPickListDefinition" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean">
		INSERT INTO ${prefix}vsPickList
		(
				vsPickListGuid,
				pickListId,
				representsValueSetDefinition,
				completeSet,
				defaultEntityCodeNamespace,
				defaultLanguage,
				defaultSortOrder,
				description,
				releaseGuid,
				isActive,
				owner,
				status,
				effectiveDate,
				expirationDate,
				entryStateGuid
			) VALUES (
				#{uid},
				#{pickListDefinition.pickListId},
				#{pickListDefinition.representsValueSetDefinition},
				#{pickListDefinition.completeSet,handler=numericBooleanTypeHandler},
				#{pickListDefinition.defaultEntityCodeNamespace},
				#{pickListDefinition.defaultLanguage},
				#{pickListDefinition.defaultSortOrder},
				#{pickListDefinition.entityDescription.content},
				#{systemReleaseUId},

			    <if test="pickListDefinition.isActive != null">
					#{pickListDefinition.isActive,handler=numericBooleanTypeHandler},
				</if>
				<if test="pickListDefinition.isActive != null">
					null,
				</if>

				
				#{pickListDefinition.owner},
				#{pickListDefinition.status},
				#{pickListDefinition.effectiveDate},
				#{pickListDefinition.expirationDate},
				#{entryStateUId}	
			)
     </insert>

	<delete id="removePickListDefinitionByPickListId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}vsPickList
		WHERE
			pickListId = #{param1}
	</delete>
	
	<delete id="removePickListEntryByPickListGuid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}vsPLEntry
		WHERE
			vsPickListGuid = #{param1}
	</delete>
	
	<update id="updatePickListDefinitionByUId" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean">
		UPDATE 
			${prefix}vsPickList pickListDef
		<set>
			<if test="pickListDefinition.representsValueSetDefinition != null">
				representsValueSetDefinition = #{pickListDefinition.representsValueSetDefinition},
			</if>
			<if test="pickListDefinition.completeSet != null">
				completeSet = #{pickListDefinition.completeSet,handler=numericBooleanTypeHandler},
			</if>
			<if test="pickListDefinition.defaultEntityCodeNamespace != null">
				defaultEntityCodeNamespace = #{pickListDefinition.defaultEntityCodeNamespace},
			</if>
			<if test="pickListDefinition.defaultLanguage != null">
				defaultLanguage = #{pickListDefinition.defaultLanguage},
			</if>
			<if test="pickListDefinition.defaultSortOrder != null">
				defaultSortOrder = #{pickListDefinition.defaultSortOrder},
			</if>
			<if test="pickListDefinition.entityDescription.content != null">
				description = #{pickListDefinition.entityDescription.content},
			</if>
			<if test="entryStateUId != null">
				entryStateGuid = #{entryStateUId}
			</if>
		</set>

		WHERE 
			pickListDef.vsPickListGuid = #{uid}
 	</update>

	<update id="updatePLVersionableAttributesByUId" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertPickListDefinitionBean">
		UPDATE 
			${prefix}vsPickList pickListDef
		<set>
			<if test="pickListDefinition.isActive != null">
				isActive =
				#{pickListDefinition.isActive,handler=numericBooleanTypeHandler},
			</if>
		    <if test="pickListDefinition.owner != null">
				owner = #{pickListDefinition.owner},
			</if>
			<if test="pickListDefinition.status != null">
				status = #{pickListDefinition.status},
			</if>
			<if test="pickListDefinition.effectiveDate != null">
				effectiveDate = #{pickListDefinition.effectiveDate},
			</if>
			<if test="pickListDefinition.expirationDate != null">
				expirationDate = #{pickListDefinition.expirationDate},
			</if>
			<if test="entryStateUId != null">
				entryStateGuid = #{entryStateUId},
			</if>
		</set>

		WHERE 
			pickListDef.vsPickListGuid = #{uid}
 	</update>
 	
	<select id="getEntryStateUIdByPickListUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			entryStateGuid
		FROM
			${prefix}vsPickList pl
		WHERE
			pl.vsPickListGuid = #{param1}	
	</select>
	
	<update id="updateEntryStateUIdByPickListUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE
			${prefix}vsPickList
		SET
			entryStateGuid = #{param2}
		WHERE 
			vsPickListGuid = #{param1}
 	</update>
 	
	<select id="getPickListDefinitionLatestRevisionIdByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			rev.revisionId
		FROM
			${prefix}vsPickList picklist,
			${prefix}vsEntryState es,
			${defaultPrefix}revision rev
		WHERE
			picklist.vsPickListGuid = #{param1}	
		AND
			picklist.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>
	
	<select id="getPrevRevIdFromGivenRevIdForPLDef" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="java.util.TreeMap">
		
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				${prefix}vsPickList pl,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				pl.pickListId = #{param1} AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							${prefix}vsEntryState es1 
						WHERE 
							pl.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						pl.vsPickListGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
				)
			ORDER BY
				revAppliedDate DESC	
					
	</select>

	<select id="getPickListDefinitionMetaDataByRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="pickListDefinitionMetaData">
		
			SELECT 
				pl.vsPickListGuid,
				pl.pickListId,
				pl.representsValueSetDefinition,
				pl.completeSet,
				pl.defaultEntityCodeNamespace,
				pl.defaultLanguage,
				pl.defaultSortOrder,
				pl.description,
				pl.releaseGuid,
				pl.isActive,
				pl.owner,
				pl.status,
				pl.effectiveDate,
				pl.expirationDate,
				pl.entryStateGuid,
				r1.revAppliedDate as revAppliedDate
			FROM
				${prefix}vsPickList pl,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				pl.pickListId = #{param1} AND
				pl.entryStateGuid = es.entryStateGuid AND
				(
					(
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			Order BY
				revAppliedDate DESC		
					
	</select>
	
	<select id="getPickListDefinitionMetaDataHistoryByRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="pickListDefinitionMetaData">
		
			SELECT 
				pl.vsPickListGuid,
				pl.pickListId,
				pl.representsValueSetDefinition,
				pl.completeSet,
				pl.defaultEntityCodeNamespace,
				pl.defaultLanguage,
				pl.defaultSortOrder,
				pl.description,
				pl.releaseGuid,
				pl.isActive,
				pl.owner,
				pl.status,
				pl.effectiveDate,
				pl.expirationDate,
				pl.entryStateGuid,
				r1.revAppliedDate as revAppliedDate
			FROM
				${prefix}h_vsPickList pl,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				pl.pickListId = #{param1} AND
				pl.entryStateGuid = es.entryStateGuid AND
				(
					(
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			Order BY
				revAppliedDate DESC		
					
	</select>

	<select id="getPickListEntryNodeListByPickListId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
			SELECT 
				plEntry.plEntryId
			FROM
				${prefix}vsPickList pl,
				${prefix}vsPLEntry plEntry
			WHERE
				pl.pickListId = #{param1} AND
				pl.vsPickListGuid = plEntry.vsPickListGuid
	</select>	

	<select id="getPickListDefinitionPropertyListByPickListId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
			SELECT 
				vsProp.propertyId
			FROM
				${prefix}vsPickList pl,
				${prefix}vsProperty vsProp
			WHERE
				pl.pickListId = #{param1} AND
				pl.vsPickListGuid = vsProp.referenceGuid
	</select>		
</mapper>