<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Mon Apr 18 08:46:17 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ValueSetDefinition">

	
	<resultMap id="valueSetDefinitionResult" type="valueSetDefinition">
		<result property="valueSetDefinitionURI" column="valueSetDefURI"/>
		<result property="valueSetDefinitionName" column="valueSetDefName"/>
		<result property="defaultCodingScheme" column="defaultCodingScheme"/>
		<result property="conceptDomain" column="conceptDomain"/>
		<result property="entityDescription.content" column="description"/>
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner"/>
		<result property="status" column="status"/>
		<result property="effectiveDate" column="effectiveDate"/>
		<result property="expirationDate" column="expirationDate"/>
	</resultMap>
	
	<resultMap id="valueSetDefinitionMetaDataResult" type="valueSetDefinitionBean">
		<result property="uid" column="valueSetDefGuid" />
		<result property="valueSetDefinition.valueSetDefinitionURI" column="valueSetDefURI"/>
		<result property="valueSetDefinition.valueSetDefinitionName" column="valueSetDefName"/>
		<result property="valueSetDefinition.defaultCodingScheme" column="defaultCodingScheme"/>
		<result property="valueSetDefinition.conceptDomain" column="conceptDomain"/>
		<result property="valueSetDefinition.entityDescription.content" column="description"/>
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="valueSetDefinition.isActive" column="isActive"/>
		<result property="valueSetDefinition.owner" column="owner"/>
		<result property="valueSetDefinition.status" column="status"/>
		<result property="valueSetDefinition.effectiveDate" column="effectiveDate"/>
		<result property="valueSetDefinition.expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
	</resultMap>
	
	<resultMap id="valueSetDefinitionMetaDataWithMultiAttrib" type="valueSetDefinitionBean">
		<result property="uid" column="valueSetDefGuid" />
		<result property="valueSetDefinition.valueSetDefinitionURI" column="valueSetDefURI"/>
		<result property="valueSetDefinition.valueSetDefinitionName" column="valueSetDefName"/>
		<result property="valueSetDefinition.defaultCodingScheme" column="defaultCodingScheme"/>
		<result property="valueSetDefinition.conceptDomain" column="conceptDomain"/>
		<result property="valueSetDefinition.entityDescription.content" column="description"/>
		<result property="systemReleaseUId" column="releaseGuid" />
		<result property="valueSetDefinition.isActive" column="isActive"/>
		<result property="valueSetDefinition.owner" column="owner"/>
		<result property="valueSetDefinition.status" column="status"/>
		<result property="valueSetDefinition.effectiveDate" column="effectiveDate"/>
		<result property="valueSetDefinition.expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
		<collection property="vsMultiAttribList" resultMap="VSMultiAttrib.vsMultiAttribResultBean"/>
	</resultMap>
	
	<resultMap id="valueSetDefinitionMap" type="valueSetDefinitionMapHelper">
		<result property="valueSetDefinition.valueSetDefinitionURI" column="valueSetDefURI"/>
		<result property="valueSetDefinition.valueSetDefinitionName" column="valueSetDefName"/>
		<result property="valueSetDefinition.defaultCodingScheme" column="defaultCodingScheme"/>
		<result property="valueSetDefinition.conceptDomain" column="conceptDomain"/>
		<result property="valueSetDefinition.entityDescription.content" column="description"/>
		<result property="valueSetDefinition.isActive" column="isActive"/>
		<result property="valueSetDefinition.owner" column="owner"/>
		<result property="valueSetDefinition.status" column="status"/>
		<result property="valueSetDefinition.effectiveDate" column="effectiveDate"/>
		<result property="valueSetDefinition.expirationDate" column="expirationDate"/>
		<result property="valueSetDefinitionGuid" column="vskey"/>
	</resultMap>
	
	<resultMap id="definitionEntryResult" type="definitionEntry">
		<result property="ruleOrder" column="ruleOrder"/>
		<result property="operator" column="operator"/>
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner"/>
		<result property="status" column="status"/>
		<result property="effectiveDate" column="effectiveDate"/>
		<result property="expirationDate" column="expirationDate"/>
		<collection property="codingSchemeReference" resultMap="ValueSetDefinition.codingSchemeReferenceResult"/>
		<collection property="valueSetDefinitionReference" resultMap="ValueSetDefinition.valueSetDefinitionReferenceResult"/>
		<collection property="entityReference" resultMap="ValueSetDefinition.entityReferenceResult"/>
		<collection property="propertyReference" resultMap="ValueSetDefinition.propertyReferenceResult"/>
		<collection property="entryState" resultMap="Versions.entryStateResult"/>
	</resultMap>
	
	<resultMap id="codingSchemeReferenceResult" type="codingSchemeReference">
		<result property="codingScheme" column="codingSchemeReference"/>
	</resultMap>
	
	<resultMap id="valueSetDefinitionReferenceResult" type="valueSetDefinitionReference">
		<result property="valueSetDefinitionURI" column="valueSetDefReference"/>
	</resultMap>
	
	<resultMap id="entityReferenceResult" type="entityReference">
		<result property="entityCode" column="entityCode"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="leafOnly" column="leafOnly" />
		<result property="referenceAssociation" column="referenceAssociation"/>
		<result property="targetToSource" column="targetToSource" />
		<result property="transitiveClosure" column="transitiveClosure" />
	</resultMap>
	
	<resultMap id="propertyReferenceResult" type="propertyReference">
		<result property="codingScheme" column="propertyRefCodingScheme"/>
		<result property="propertyName" column="propertyName"/>
		<collection property="propertyMatchValue" resultMap="ValueSetDefinition.propertyMatchValueResult"/>
	</resultMap>
	
	<resultMap id="propertyMatchValueResult" type="propertyMatchValue">
		<result property="matchAlgorithm" column="matchAlgorithm"/>		
		<result property="content" column="propertyMatchValue"/>
		<result property="dataType" column="format"/>
	</resultMap>
	
	<resultMap id="csVersionReferenceResult" type="csVersionReference">
		<result property="codingSchemeURN" column="valueSetDefUri"/>
		<result property="codingSchemeVersion" column="resourceVersion"/>
	</resultMap>
	
	<select id="getValueSetDefinitionURIs" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			valueSetDefURI
		FROM
			${prefix}valueSetDefinition
	</select>
	
	<select id="getValueSetDefinitionGuidByValueSetDefinitionURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="Common.uidResult">
		SELECT
			valueSetDefGuid AS uidKey
		FROM
			${prefix}valueSetDefinition
		WHERE
			valueSetDefURI = #{param1}
	</select>
	
	<select id="getValueSetDefinitionByValueSetURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="valueSetDefinitionResult">
		SELECT
			valueSetDefURI,
			valueSetDefName,
			defaultCodingScheme,
			conceptDomain,
			description,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate
		FROM
			${prefix}valueSetDefinition
		WHERE
			valueSetDefURI = #{param1}
	</select>
	
	<select id="getValueSetDefinitionMetaDataByValueSetURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="valueSetDefinitionMetaDataResult">
		SELECT *
		FROM
			${prefix}valueSetDefinition
		WHERE
			valueSetDefURI = #{param1}
	</select>
	
	<select id="getValueSetURIsByContext" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			vsdef.valueSetDefURI
					valueSetDefURI
		FROM
			${prefix}valueSetDefinition AS vsdef
		JOIN
			${prefix}vsSupportedAttrib AS vssa
		ON
			vsdef.valueSetDefGuid = vssa.referenceGuid 
		WHERE
			vssa.supportedAttributeTag = "Context"
		AND
			vssa.uri = #{param1}
	</select>
	
	<select id="getValueSetDefinitionURIForValueSetName" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			valueSetDefURI
		FROM
			${prefix}valueSetDefinition
		WHERE
			valueSetDefName = #{param1}
	</select>
	
	<select id="getDefinitionEntryByValueSetGuid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="definitionEntryResult">
		SELECT
			vsdEntry.ruleOrder,
			vsdEntry.operator,
			vsdEntry.codingSchemeReference,
			vsdEntry.valueSetDefReference,
			vsdEntry.entityCode,
			vsdEntry.entityCodeNamespace,
			vsdEntry.leafOnly,
			vsdEntry.referenceAssociation,
			vsdEntry.targetToSource,
			vsdEntry.transitiveClosure,
			vsdEntry.propertyRefCodingScheme,
			vsdEntry.propertyName,
			vsdEntry.propertyMatchValue,
			vsdEntry.matchAlgorithm,
			vsdEntry.format,
			vsdEntry.isActive,
			vsdEntry.owner,
			vsdEntry.status,
			vsdEntry.effectiveDate,
			vsdEntry.expirationDate,
			vsdEntry.entryStateGuid,
			entryState.changeType,
  			entryState.relativeOrder,
  			entryState.relativeOrder,
  			
  			currentRevision.revisionId AS currentRevisionId,
  			previousRevision.revisionId AS previousRevisionId
		FROM
			${prefix}vsdEntry vsdEntry
		LEFT JOIN
  			${prefix}vsEntryState entryState
  		ON
  			vsdEntry.entryStateGuid =
  			entryState.entryStateGuid	
  		LEFT JOIN
  			${defaultPrefix}revision currentRevision
  		ON
  			entryState.revisionGuid =
  			currentRevision.revisionGuid	
		LEFT JOIN
  			${defaultPrefix}revision previousRevision
  		ON
  			entryState.prevRevisionGuid =
  			previousRevision.revisionGuid	
		WHERE
			vsdEntry.valueSetDefGuid = #{param1}
		ORDER BY
			ruleOrder
	</select>
	
	<insert id="insertValueSetDefinition" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean">
		INSERT INTO ${prefix}valueSetDefinition
		(
				valueSetDefGuid,
				valueSetDefURI,
				valueSetDefName,
				defaultCodingScheme,
				conceptDomain,
				description,
				releaseGuid,
				isActive,
				owner,
				status,
				effectiveDate,
				expirationDate,
				entryStateGuid
			) VALUES (
				#{uid},
				#{valueSetDefinition.valueSetDefinitionURI},
				#{valueSetDefinition.valueSetDefinitionName},
				#{valueSetDefinition.defaultCodingScheme},
				#{valueSetDefinition.conceptDomain},
				#{valueSetDefinition.entityDescription.content},
				#{systemReleaseUId},
				#{valueSetDefinition.isActive},
				#{valueSetDefinition.owner},
				#{valueSetDefinition.status},
				#{valueSetDefinition.effectiveDate},
				#{valueSetDefinition.expirationDate},
				#{entryStateUId}	
			)
     </insert>

	<update id="updateValueSetDefinitionByUId" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean">
		UPDATE 
			${prefix}valueSetDefinition
		<set>
			<if test="valueSetDefinition.valueSetDefinitionName !=null">
				valueSetDefName = #{valueSetDefinition.valueSetDefinitionName},
			</if>
			<if test="valueSetDefinition.defaultCodingScheme !=null">
				defaultCodingScheme = #{valueSetDefinition.defaultCodingScheme},
			</if>
			<if test="valueSetDefinition.conceptDomain !=null">
				conceptDomain = #{valueSetDefinition.conceptDomain},
			</if>
			<if test="valueSetDefinition.entityDescription !=null">
				entityDescription = #{valueSetDefinition.entityDescription},
			</if>
			<if test="valueSetDefinition.entryStateUId !=null">
				entryStateGuid = #{entryStateUId}
			</if>
		</set>


		WHERE 
			valueSetDefGuid = #{uid}
 	</update>	

	<update id="updateValueSetDefVersionableChangesByUId" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertValueSetDefinitionBean">
		UPDATE 
			${prefix}valueSetDefinition
		<set>
			<if test="valueSetDefinition.isActive !=null">
				isActive = #{valueSetDefinition.isActive},
			</if>
			<if test="valueSetDefinition.owner !=null">
				owner = #{valueSetDefinition.owner},
			</if>
			<if test="valueSetDefinition.status !=null">
				status = #{valueSetDefinition.status},
			</if>
			<if test="valueSetDefinition.effectiveDate !=null">
				effectiveDate = #{valueSetDefinition.effectiveDate},
			</if>
			<if test="valueSetDefinition.expirationDate !=null">
				expirationDate = #{valueSetDefinition.expirationDate},
			</if>
			<if test="entryStateUId !=null">
				entryStateGuid = #{entryStateUId}
			</if>
		</set>

		WHERE 
			valueSetDefGuid = #{uid}
 	</update> 	
 	
	<update id="updateValueSetDefinitinEntryStateUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE 
			${prefix}valueSetDefinition
		SET 
			entryStateGuid = #{param2}
		WHERE 
			valueSetDefGuid = #{param1}
 	</update> 	
 	
	<delete id="removevalueSetDefinitionByValueSetDefinitionURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}valueSetDefinition
		WHERE
			valueSetDefURI = #{param1}
	</delete>
	
	<delete id="removeDefinitionEntryByValueSetDefinitionGuid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}vsdEntry
		WHERE
			valueSetDefGuid = #{param1}
	</delete>
	
	<select id="getValueSetDefinitionMetadataByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="ValueSetDefinition.valueSetDefinitionMetaDataWithMultiAttrib">
		SELECT
			vs.valueSetDefGuid,
			vs.valueSetDefURI,
			vs.valueSetDefName,
			vs.defaultCodingScheme,
			vs.conceptDomain,
			vs.description,
			vs.releaseGuid,
			vs.isActive,
			vs.owner,
			vs.status,
			vs.effectiveDate,
			vs.expirationDate,
			vs.entryStateGuid,
			vsMulti.vsMultiAttribGuid,
			vsMulti.referenceGuid,
			vsMulti.referenceType,
			vsMulti.attributeType,
			vsMulti.attributeValue,
			vsMulti.subRef,
			vsMulti.role,
			vsMulti.entryStateGuid AS esGuid				
		FROM
			${prefix}valueSetDefinition vs
		LEFT JOIN
			${prefix}vsMultiAttrib vsMulti
		ON
			vsMulti.referenceGuid = vs.valueSetDefGuid
		WHERE
			valueSetDefGuid = #{param1}
	</select>
	
		<select id="getValueSetDefinitionMetadataHashMapByRegistryDesignation" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="ValueSetDefinition.valueSetDefinitionMap">
		SELECT
			vs.valueSetDefURI,
			vs.valueSetDefName,
			vs.defaultCodingScheme,
			vs.conceptDomain,
			vs.description,
			vs.releaseGuid,
			vs.isActive,
			vs.owner,
			vs.status,
			vs.effectiveDate,
			vs.expirationDate,
			vs.valueSetDefGuid AS vskey
		FROM
			${prefix}registry as reg
		JOIN
			${prefix}valueSetDefinition as vs
		ON
			reg.resourceURI=vs.valueSetDefURI
		WHERE
			reg.resourceType = #{param1}
	</select>

	<select id="getEntryStateUIdByValuesetDefUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="Common.uidResult">
		SELECT
			entryStateGuid AS uidKey
		FROM
			${prefix}valueSetDefinition
		WHERE
			valueSetDefGuid = #{param1}
	</select>
	
	<select id="getValueSetDefinitionLatestRevisionIdByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			rev.revisionId
		FROM
			${prefix}valueSetDefinition vsDef,
			${prefix}vsEntryState es,
			${defaultPrefix}revision rev
		WHERE
			vsDef.valueSetDefGuid = #{param1}	
		AND
			vsDef.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>

	<select id="getPrevRevisionIdFromGivenRevIdForValueSetDefinition" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="java.util.TreeMap">
		
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				${prefix}valueSetDefinition vs,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				vs.valueSetDefURI = #{param1} AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							${prefix}vsEntryState es1 
						WHERE 
							vs.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						vs.valueSetDefGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
				)
			ORDER BY
				revAppliedDate DESC			
					
	</select>

	<select id="getValueSetDefinitionMetaDataByRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="valueSetDefinitionMetaDataResult">
		
			SELECT 
				vs.valueSetDefGuid,
				vs.valueSetDefURI,
				vs.valueSetDefName,
				vs.defaultCodingScheme,
				vs.conceptDomain,
				vs.description,
				vs.releaseGuid,
				vs.isActive,
				vs.owner,
				vs.status,
				vs.effectiveDate,
				vs.expirationDate,
				vs.entryStateGuid,
				r1.revAppliedDate as revAppliedDate
			FROM
				${prefix}valueSetDefinition vs,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				vs.valueSetDefURI = #{param1} AND
				vs.entryStateGuid = es.entryStateGuid AND
				(
					(						
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			Order BY
				revAppliedDate DESC		
					
	</select>
	
	<select id="getValueSetDefinitionMetaDataHistoryByRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="valueSetDefinitionMetaDataResult">
		
			SELECT 
				vs.valueSetDefGuid,
				vs.valueSetDefURI,
				vs.valueSetDefName,
				vs.defaultCodingScheme,
				vs.conceptDomain,
				vs.description,
				vs.releaseGuid,
				vs.isActive,
				vs.owner,
				vs.status,
				vs.effectiveDate,
				vs.expirationDate,
				vs.entryStateGuid,
				r1.revAppliedDate as revAppliedDate
			FROM
				${prefix}h_valueSetDefinition vs,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				vs.valueSetDefURI = #{param1} AND
				vs.entryStateGuid = es.entryStateGuid AND
				(
					(						
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
					OR
					(
						es.revisionGuid IS NULL
					)
				)
			Order BY
				revAppliedDate DESC		
					
	</select>

	<select id="getDefinitionEntryListByValSetDefURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
			SELECT 
				defEntry.ruleOrder
			FROM
				${prefix}valueSetDefinition vs,
				${prefix}vsdEntry defEntry
			WHERE
				vs.valueSetDefURI = #{param1} AND
				vs.valueSetDefGuid = defEntry.valueSetDefGuid
	</select>	
	
	<select id="getValueSetDefPropertyListByValSetDefURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
			SELECT 
				vsProp.propertyId
			FROM
				${prefix}valueSetDefinition vs,
				${prefix}vsProperty vsProp
			WHERE
				vs.valueSetDefURI = #{param1} AND
				vs.valueSetDefGuid = vsProp.referenceGuid
	</select>	
	
	<select id="getValueSetSchemeRefForTopNodeSourceCode" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="csVersionReferenceResult">
		SELECT 
			vsd.valueSetDefURI,
			reg.resourceVersion
		FROM 
			${prefix}valueSetDefinition vsd
		JOIN	
			${prefix}vsdEntry ent
		ON
			vsd.valueSetDefGuid = ent.valueSetDefGuid
		JOIN
		    ${prefix}registry reg
		ON
			vsd.valueSetDefUri = reg.resourceUri 
		WHERE 
			ent.entityCode = #{param1}	
		AND 
			reg.resourceType = #{param2}	
	 </select>
</mapper>