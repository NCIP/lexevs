<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Mon Apr 18 08:46:16 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="CodingScheme">

	<resultMap id="codingSchemeResult" type="codingScheme">
		<result property="codingSchemeName" column="codingSchemeName"/>
		<result property="codingSchemeURI" column="codingSchemeUri"/>
		<result property="representsVersion" column="representsVersion"/>
		<result property="formalName" column="formalName"/>
		<result property="defaultLanguage" column="defaultLanguage"/>
		<result property="approxNumConcepts" column="approxNumConcepts"/>
		<result property="entityDescription.content" column="description"/>
		<result property="copyright.content" column="copyright"/>
		<result property="isActive" column="isActive" />
		<result property="_effectiveDate" column="effectiveDate" />
		<collection property="entryState" resultMap="Versions.entryStateResult"/>
		<collection property="_sourceList" resultMap="CodingScheme.sourceResult"/>
		<collection property="_localNameList" resultMap="CodingScheme.localNameResult"/>
	</resultMap>

	<resultMap id="codingSchemeSummaryResult" type="codingSchemeSummary">
		<result property="localName" column="codingSchemeName"/>
		<result property="codingSchemeURI" column="codingSchemeUri"/>
		<result property="representsVersion" column="representsVersion"/>
		<result property="formalName" column="formalName"/>
		<result property="codingSchemeDescription.content" column="description"/>
	</resultMap>
	
	<resultMap id="codingSchemeMetaDataResult" type="codingSchemeBean">
		<result property="uid" column="codingSchemeGuid"/>
		<result property="codingSchemeName" column="codingSchemeName"/>
		<result property="codingSchemeURI" column="codingSchemeURI"/>
		<result property="representsVersion" column="representsVersion"/>
		<result property="formalName" column="formalName"/>
		<result property="defaultLanguage" column="defaultLanguage"/>
		<result property="approxNumConcepts" column="approxNumConcepts"/>
		<result property="description" column="description"/>
		<result property="copyright" column="copyright"/>	
		<result property="isActive" column="isActive"/>
		<result property="owner" column="owner"/>
		<result property="status" column="status"/>
		<result property="effectiveDate" column="effectiveDate"/>
		<result property="expirationDate" column="expirationDate"/>
		<result property="releaseUId" column="releaseGuid"/>
		<result property="entryStateUId" column="entryStateGuid"/>
		<collection property="csMultiAttribList" resultMap="CodingScheme.csMultiAttribResultBean"/>
	</resultMap>
	
	<resultMap id="propertyNameAndTypeResult" type="org.LexGrid.LexBIG.DataModel.Core.NameAndValue">
		<result property="name" column="propertyName"/>
		<result property="content" column="propertyType"/>
	</resultMap>
	
	<delete id="deleteCodingSchemeByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}codingScheme
		WHERE
			codingSchemeGuid = #{param1}
	</delete>
	
	
	<sql id="getCodingSchemeFragment">
		SELECT
			cs.codingSchemeGuid,
			cs.codingSchemeName,
			cs.codingSchemeUri,
			cs.representsVersion,
			cs.formalName,
			cs.defaultLanguage,
			cs.approxNumConcepts,
			cs.description,
			cs.copyright,
			cs.isActive,
			cs.owner,
			cs.status,
			cs.effectiveDate,
			cs.expirationDate,
			es.changeType,
			es.relativeOrder,
			es.revisionGuid,
			currentRevision.revisionId AS currentRevisionId,
			previousRevision.revisionId AS previousRevisionId,
			csmaSource.*,
			csmaLocalName.attributeValue AS localNameValue
		FROM
			${prefix}codingScheme cs
			
		LEFT JOIN
			${prefix}entryState es
		ON
			cs.entryStateGuid = es.entryStateGuid
			
		LEFT JOIN
			${defaultPrefix}revision currentRevision
		ON 
			es.revisionGuid = currentRevision.revisionGuid
			
		LEFT JOIN
			${defaultPrefix}revision previousRevision
		ON 
			es.prevRevisionGuid = previousRevision.revisionGuid
	</sql>
			
	<sql id="getCodingSchemeMultiAttribsFragment">
		LEFT JOIN
			${prefix}csMultiAttrib csmaSource
		ON (
			csmaSource.codingSchemeGuid = cs.codingSchemeGuid
		AND
			csmaSource.attributeType = 'source'
			)
		LEFT JOIN
			${prefix}csMultiAttrib csmaLocalName
		ON (
			csmaLocalName.codingSchemeGuid = cs.codingSchemeGuid
		AND
			csmaLocalName.attributeType = 'localName'
			)
	</sql>
	
	<sql id="getHistoryCodingSchemeMultiAttribsFragment">
		LEFT JOIN
			${prefix}csMultiAttrib csmaSource
		ON (
			csmaSource.codingSchemeGuid = cs.codingSchemeGuid
		AND
			csmaSource.attributeType = 'source'
		AND
			csmaSource.entryStateGuid = cs.entryStateGuid	
			)
			
		LEFT JOIN
			${prefix}csMultiAttrib csmaLocalName
		ON (
			csmaLocalName.codingSchemeGuid = cs.codingSchemeGuid
		AND
			csmaLocalName.attributeType = 'localName'
		AND
			csmaLocalName.entryStateGuid = cs.entryStateGuid	
			)
	</sql>
	
	
	<select id="getCodingSchemeByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="CodingScheme.codingSchemeResult">
		<include refid="getCodingSchemeFragment"/>
		<include refid="getCodingSchemeMultiAttribsFragment"/>
		WHERE
			cs.codingSchemeGuid = #{param1}

     </select>
     
     <select id="getCodingSchemeMetaDataByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="CodingScheme.codingSchemeMetaDataResult">
		SELECT 
			cs.codingSchemeGuid,
			cs.codingSchemeName,
			cs.codingSchemeURI,
			cs.representsVersion,
			cs.formalName,
			cs.defaultLanguage,
			cs.approxNumConcepts,
			cs.description,
			cs.copyright,
			cs.isActive,
			cs.owner,
			cs.status,
			cs.effectiveDate,
			cs.expirationDate, 
			cs.releaseGuid,
			cs.entryStateGuid,
			csMulti.csMultiAttribGuid,
			csMulti.codingSchemeGuid AS csGuid,
			csMulti.attributeType,
			csMulti.attributeValue,
			csMulti.subRef,
			csMulti.role,	
			csMulti.entryStateGuid AS esGuid		
		FROM
			${prefix}codingScheme cs
		LEFT JOIN
			${prefix}csMultiAttrib csMulti
		ON
			cs.codingSchemeGuid = csMulti.codingSchemeGuid
		WHERE
			cs.codingSchemeGuid = #{param1}
     </select>
     
     <select id="test" resultType="java.util.HashMap">
     	SELECT * from codingScheme
     </select>
     
    <select id="getCodingSchemeSummaryByUriAndVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="codingSchemeSummaryResult">
		SELECT
			codingSchemeName,
			codingSchemeURI,
			representsVersion,
			formalName,
			description
		FROM 
			${prefix}codingScheme
		WHERE
			codingSchemeURI =
			#{param1}
		AND
			representsVersion =
			#{param2}
	</select>
	
	<select id="getCodingSchemeByNameAndVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="codingSchemeResult">
		<include refid="getCodingSchemeFragment"/>
		<include refid="getCodingSchemeMultiAttribsFragment"/>
		WHERE
			cs.codingSchemeName = #{param1}
		AND
			cs.representsVersion = #{param2}
     </select>
     
     <select id="getCodingSchemeByIdAndRevisionId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="codingSchemeResult">
		<include refid="getCodingSchemeFragment"/>
		<include refid="getHistoryCodingSchemeMultiAttribsFragment"/>
		WHERE
			cs.codingSchemeGuid = #{param1}
		AND
			currentRevision.revisionId = #{param2}	
     </select>
     
     <select id="getCodingSchemeIdByNameAndVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Common.uidResult">
		SELECT
			codingSchemeGuid AS uidKey
		FROM
			${prefix}codingScheme
		WHERE
			codingSchemeName = #{param1}
		AND
			representsVersion = #{param2}
     </select>
     
     <select id="getCodingSchemeIdByUriAndVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Common.uidResult">
		SELECT
			codingSchemeGuid AS uidKey
		FROM
			${prefix}codingScheme
		WHERE
			codingSchemeUri = #{param1}
		AND
			representsVersion = #{param2}
     </select>
     
     <select id="getEntryStateId" parameterType="map" resultType="string">
		SELECT
			entryStateId
		FROM
			codingScheme
		WHERE
			codingSchemeName = #{codingSchemeName}
		AND
			representsVersion = #{representsVersion}
		AND
			isCurrentRelease = #{isCurrentRelease}
     </select>
   
	<update id="updateCodingSchemeByUId" parameterType="org.lexevs.dao.database.ibatis.codingscheme.parameter.InsertOrUpdateCodingSchemeBean">
		UPDATE 
			${prefix}codingScheme
		<set>
			<if test="codingSchemeName != null">
				codingSchemeName = #{codingSchemeName},
			</if>
			<if test="formalName != null">
				formalName = #{formalName},
			</if>
			<if test="approxNumConcepts != null">
				approxNumConcepts = #{approxNumConcepts},
			</if>
			<if test="defaultLanguage != null">
				defaultLanguage = #{defaultLanguage},
			</if>
			<if test="description != null">
				description = #{description},
			</if>
			<if test="copyright != null">
				copyright = #{copyright},
			</if>
			<if test="entryStateUId != null">
				entryStateGuid = #{entryStateUId}
			</if>
		</set>

		WHERE 
			codingSchemeGuid = #{uid}
 	</update>
 	
 	<update id="updateCodingSchemeVerAttribByUId" parameterType="org.lexevs.dao.database.ibatis.codingscheme.parameter.InsertOrUpdateCodingSchemeBean">
		UPDATE 
			${prefix}codingScheme
		<set>
			<if test="codingScheme.copyright.isActive != null">
				isActive = #{codingScheme.isActive},
			</if>
			<if test="codingScheme.owner != null">
				owner = #{codingScheme.owner,
			</if>
			<if test="codingScheme.status != null">
				status = #{codingScheme.status},
			</if>
			<if test="codingScheme.effectiveDate != null">
				effectiveDate = #{codingScheme.effectiveDate},
			</if>
			<if test="codingScheme.expirationDate != null">
				expirationDate = #{codingScheme.expirationDate},
			</if>
			<if test="entryStateUId != null">
				entryStateGuid = #{entryStateUId}
			</if>
		</set>

		WHERE 
			codingSchemeGuid = #{uid}
 	</update>

 	<update id="updateCodingSchemeEntryStateUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE
			${prefix}codingScheme
		SET
			entryStateGuid = #{param2}
		WHERE 
			codingSchemeGuid = #{param1}
 	</update>

	<insert id="insertCodingScheme" parameterType="org.lexevs.dao.database.ibatis.codingscheme.parameter.InsertOrUpdateCodingSchemeBean">
		
		INSERT INTO ${prefix}codingScheme (
			codingSchemeGuid,
			codingSchemeName,
			codingSchemeURI,
			representsVersion,
			formalName,
			defaultLanguage,
			approxNumConcepts,
			description,
			copyright,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			releaseGuid,
			entryStateGuid
		) VALUES (
			#{uid}, 
			#{codingSchemeName}, 
			#{codingSchemeURI}, 
			#{representsVersion},
			#{formalName,jdbcType=VARCHAR},
			#{defaultLanguage,jdbcType=VARCHAR},
			#{approxNumConcepts,jdbcType=NUMERIC},
			#{description,jdbcType=VARCHAR},
			#{copyright,jdbcType=VARCHAR},
			#{isActive},
			#{owner,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},
			#{effectiveDate,jdbcType=TIMESTAMP},
			#{expirationDate,jdbcType=TIMESTAMP},
			#{releaseUId},
			#{entryStateUId}
		)
  </insert>
  
  
  	
	<select id="getDistinctPropertyNames" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
     SELECT DISTINCT
     	prop.propertyName
     FROM
     	${prefix}property prop
	 INNER JOIN 
	 	${prefix}entity entity
	 ON 
	 	prop.referenceGuid = entity.entityGuid
	 INNER JOIN
		${prefix}codingScheme cs
	 ON 
	 	entity.codingSchemeGuid = cs.codingSchemeGuid
	 WHERE
		cs.codingSchemeGuid = #{param1}
     </select>
     
     <select id="getDistinctPropertyNamdAndType" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="propertyNameAndTypeResult">
     SELECT DISTINCT
     	prop.propertyName, prop.propertyType
     FROM
     	${prefix}property prop
	 INNER JOIN 
	 	${prefix}entity entity
	 ON 
	 	prop.referenceGuid = entity.entityGuid
	 INNER JOIN
		${prefix}codingScheme cs
	 ON 
	 	entity.codingSchemeGuid = cs.codingSchemeGuid
	 WHERE
		cs.codingSchemeGuid = #{param1}
     </select>
     
     	<select id="getDistinctEntityTypes" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
     SELECT DISTINCT
     	type.entityType
     FROM
     	${prefix}entityType type
	 INNER JOIN 
	 	${prefix}entity entity
	 ON 
	 	type.entityGuid = entity.entityGuid
	 INNER JOIN
		${prefix}codingScheme cs
	 ON 
	 	entity.codingSchemeGuid = cs.codingSchemeGuid
	 WHERE
		cs.codingSchemeGuid = #{param1}
     </select>
     
      <select id="getDistinctNamespaces" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
     SELECT DISTINCT
     	entity.entityCodeNamespace
     FROM
     	${prefix}entity entity
	 WHERE
		entity.codingSchemeGuid = #{param1}
     </select>
     
      <select id="getDistinctFormats" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
        SELECT DISTINCT
     	prop.format
     FROM
     	${prefix}property prop
	 INNER JOIN 
	 	${prefix}entity entity
	 ON 
	 	prop.referenceGuid = entity.entityGuid
	 INNER JOIN
		${prefix}codingScheme cs
	 ON 
	 	entity.codingSchemeGuid = cs.codingSchemeGuid
	 WHERE
		cs.codingSchemeGuid = #{param1}
	 AND
	 	prop.format IS NOT NULL
     </select>
     
      <select id="getDistinctLanguages" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
        SELECT DISTINCT
     	prop.language
     FROM
     	${prefix}property prop
	 INNER JOIN 
	 	${prefix}entity entity
	 ON 
	 	prop.referenceGuid = entity.entityGuid
	 INNER JOIN
		${prefix}codingScheme cs
	 ON 
	 	entity.codingSchemeGuid = cs.codingSchemeGuid
	 WHERE
		cs.codingSchemeGuid = #{param1}
	 AND
	 	prop.language IS NOT NULL
			
	  UNION
		
		SELECT
			cs.defaultLanguage
		FROM
			${prefix}codingScheme cs
		WHERE
			cs.codingSchemeGuid = #{param1}
          AND cs.defaultLanguage IS NOT NULL
     </select>


	<sql id="distinctPropQualFragment">
		FROM
			${prefix}propertyMultiAttrib propQual
		INNER JOIN
			${prefix}property prop
		ON
			prop.propertyGuid = propQual.propertyGuid
		INNER JOIN
			${prefix}entity entity
		ON
			prop.referenceGuid = entity.entityGuid
		INNER JOIN
			${prefix}codingScheme cs
		ON
			entity.codingSchemeGuid = cs.codingSchemeGuid
		WHERE
			cs.codingSchemeGuid = #{param1}
	</sql>

	<select id="getDistinctPropertyQualifierTypes" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT DISTINCT
			propQual.attributeType
		<include refid="distinctPropQualFragment"/>
     </select>
     
     <select id="getDistinctPropertyQualifierNames" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT DISTINCT
			propQual.attributeId
		<include refid="distinctPropQualFragment"/>
     </select>
     
	<select id="getEntryStateUIdByCodingSchemeUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			entryStateGuid
		FROM
			${prefix}codingScheme cs
		WHERE
			cs.codingSchemeGuid = #{param1}	
	</select>

	<select id="getCodingSchemeLatestRevisionIdByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			rev.revisionId
		FROM
			${prefix}codingScheme cs,
			${prefix}entryState es,
			${defaultPrefix}revision rev
		WHERE
			cs.codingSchemeGuid = #{param1}	
		AND
			cs.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>
	
	<select id="getCodingSchemeRevisionIdWhenNewByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			rev.revisionId
		FROM
			${prefix}entryState es
		INNER JOIN
			${defaultPrefix}revision rev
		ON
			es.revisionGuid = rev.revisionGuid
		WHERE
			es.entryGuid = #{param1}	
		AND
			es.changeType = 'NEW'
	</select>

	<delete id="deleteAllCodingSchemeSourceByCodingSchemeUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}csMultiAttrib
		WHERE
			attributeType = 'source'
		AND
			codingSchemeGuid = #{param1}
	</delete>
	
	<delete id="deleteAllCodingSchemeLocalNamesByCodingSchemeUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}csMultiAttrib
		WHERE
			attributeType = 'localName'
		AND
			codingSchemeGuid = #{param1}
	</delete>
	
	<select id="getAllCodingSchemeRevisionsByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			rev.revisionId
		FROM
			${prefix}codingScheme cs,
			${prefix}entryState es,
			${defaultPrefix}revision rev
		WHERE
			cs.codingSchemeGuid = #{param1} 
		AND
			cs.entryStateGuid = es.entryStateGuid
		AND
			es.revisionGuid = rev.revisionGuid
	</select>
	
</mapper>