<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Fri Apr 15 16:47:22 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PickListEntryNode">



	<resultMap id="pickListEntryNodeBeanResult" type="pickListEntryNodeBean">
		<result property="vsPLEntryGuid" column="vsPLEntryGuid" />
		<result property="pickListEntryId" column="plEntryId"/>
		<result property="include" column="include" />
		<result property="isActive" column="isActive" />
		<result property="owner" column="owner"/>
		<result property="status" column="status"/>
		<result property="effectiveDate" column="effectiveDate"/>
		<result property="expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
		<collection property="pickListEntry" resultMap="PickListEntryNode.pickListEntryResult"/>		
		<collection property="pickListEntryExclusion" resultMap="PickListEntryNode.pickListExclusionResult"/>
	</resultMap>
	
	<resultMap id="pickListEntryNodeMetaDataWithMultiAttrib" type="insertOrUpdatePickListEntryNodeBean">
		<result property="uid" column="vsPLEntryGuid" />
		<result property="pickListUId" column="vsPickListGuid" />
		<result property="pickListEntryNode.pickListEntryId" column="plEntryId"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="entityCode" column="entityCode"/>
		<result property="entryOrder" column="entryOrder"/>
		<result property="isDefault" column="isDefault" />
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="propertyId" column="propertyId"/>
		<result property="langauage" column="language"/>
		<result property="include" column="include" />
		<result property="pickText" column="pickText"/>
		<result property="pickListEntryNode.isActive" column="isActive"/>
		<result property="pickListEntryNode.owner" column="owner"/>
		<result property="pickListEntryNode.status" column="status"/>
		<result property="pickListEntryNode.effectiveDate" column="effectiveDate"/>
		<result property="pickListEntryNode.expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
		<collection property="vsMultiAttribList" resultMap="VSMultiAttrib.vsMultiAttribResultBean"/>
	</resultMap>

	<resultMap id="pickListEntryNodeMetaData" type="insertOrUpdatePickListEntryNodeBean">
		<result property="uid" column="vsPLEntryGuid" />
		<result property="pickListUId" column="vsPickListGuid" />
		<result property="pickListEntryNode.pickListEntryId" column="plEntryId"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="entityCode" column="entityCode"/>
		<result property="entryOrder" column="entryOrder"/>
		<result property="isDefault" column="isDefault" />
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="propertyId" column="propertyId"/>
		<result property="langauage" column="language"/>
		<result property="include" column="include" />
		<result property="pickText" column="pickText"/>
		<result property="pickListEntryNode.isActive" column="isActive"/>
		<result property="pickListEntryNode.owner" column="owner"/>
		<result property="pickListEntryNode.status" column="status"/>
		<result property="pickListEntryNode.effectiveDate" column="effectiveDate"/>
		<result property="pickListEntryNode.expirationDate" column="expirationDate"/>
		<result property="entryStateUId" column="entryStateGuid" />
	</resultMap>
		
	<resultMap id="pickListEntryResult" type="pickListEntry">
		<result property="entityCode" column="entityCode"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
		<result property="entryOrder" column="entryOrder"/>
		<result property="propertyId" column="propertyId"/>
		<result property="isDefault" column="isDefault" />
		<result property="matchIfNoContext" column="matchIfNoContext"/>
		<result property="language" column="language"/>
		<result property="pickText" column="pickText"/>
	</resultMap>
	
	<resultMap id="pickListExclusionResult" type="pickListEntryExclusion">
		<result property="entityCode" column="entityCode"/>
		<result property="entityCodeNamespace" column="entityCodeNamespace"/>
	</resultMap>
	
    <insert id="insertPickListEntry" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean">
	INSERT INTO ${prefix}vsPLEntry
	(
			vsPLEntryGuid,
			vsPickListGuid,
			plEntryId,
			entityCodeNamespace,
			entityCode,
			entryOrder,
			isDefault,
			matchIfNoContext,
			propertyId,
			include,
			pickText,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		) VALUES (
			#{uid},
			#{pickListUId},
			#{pickListEntryNode.pickListEntryId},
			#{entityCodeNamespace},
			#{entityCode},
			#{entryOrder},

		    <if test="isDefault !=null">
				#{isDefault},
			</if>
		    <if test="isDefault == null">
				null,
			</if>
			<if test="matchIfNoContext !=null">
				#{matchIfNoContext},
			</if>
			<if test="matchIfNoContext == null">
				null,
			</if>
			
			#{propertyId},

		<if test="include !=null">
			#{include},
		</if>
		<if test="include == null">
			null,
		</if>
			
			#{pickText},

		<if test="pickListEntryNode.isActive !=null">
			#{pickListEntryNode.isActive},
		</if>
		<if test="pickListEntryNode.isActive == null">
			null,
		</if>

			
			#{pickListEntryNode.owner},
			#{pickListEntryNode.status},
			#{pickListEntryNode.effectiveDate},
			#{pickListEntryNode.expirationDate},
			#{entryStateUId}	
		)
    </insert>
     
	<select id="getPickListEntryNodeUIdByPickListIdAndEntryNodeId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Common.uidResult">
		SELECT
			plEntry.vsPLEntryGuid AS uidKey
		FROM
			${prefix}vsPickList pickList,
			${prefix}vsPLEntry plEntry
		WHERE
			pickList.pickListId = #{param1}
		AND	
			pickList.vsPickListGuid = plEntry.vsPickListGuid
		AND
			plEntry.plEntryId = #{param2}	
	</select>
	
	<select id="getPickListEntryNodeBeanByPickListGuid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="pickListEntryNodeBeanResult">
		SELECT
			vsPLEntryGuid,
			plEntryId,
			entityCodeNamespace,
			entityCode,
			entryOrder,
			isDefault,
			matchIfNoContext,
			propertyId,
			language,
			include,
			pickText,
			isActive,
			owner,
			status,
			effectiveDate,
			expirationDate,
			entryStateGuid
		FROM
			${prefix}vsPLEntry
		WHERE
			vsPickListGuid = #{param1}
		ORDER BY entryOrder
     </select>

	<select id="getPickListEntryNodeMeatDataByPLEntryGuid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="pickListEntryNodeMetaDataWithMultiAttrib">
		SELECT
			plEntry.vsPLEntryGuid,
			plEntry.vsPickListGuid,
			plEntry.plEntryId,
			plEntry.entityCodeNamespace,
			plEntry.entityCode,
			plEntry.entryOrder,
			plEntry.isDefault,
			plEntry.matchIfNoContext,
			plEntry.propertyId,
			plEntry.language,
			plEntry.include,
			plEntry.pickText,
			plEntry.isActive,
			plEntry.owner,
			plEntry.status,
			plEntry.effectiveDate,
			plEntry.expirationDate,
			plEntry.entryStateGuid,
			vsMulti.vsMultiAttribGuid,
			vsMulti.referenceGuid,
			vsMulti.referenceType,
			vsMulti.attributeType,
			vsMulti.attributeValue,
			vsMulti.subRef,
			vsMulti.role,
			vsMulti.entryStateGuid esGuid				
		FROM
			${prefix}vsPLEntry plEntry
		LEFT JOIN
			${prefix}vsMultiAttrib vsMulti
		ON
			vsMulti.referenceGuid = plEntry.vsPLEntryGuid
		WHERE
			plEntry.vsPLEntryGuid = #{param1}
    </select>

	<update id="updatePickListEntryNodeByUId" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean">
		UPDATE 
			${prefix}vsPLEntry plEntry
		<set>
			<if test="entityCode !=null">
				entityCode=#{entityCode},
			</if>
			<if test="entityCodeNamespace !=null">
				entityCodeNamespace=#{entityCodeNamespace},
			</if>
			<if test="entryOrder !=null">
				entryOrder=#{entryOrder},
			</if>
			<if test="isDefault !=null">
				isDefault=#{isDefault},
			</if>
			<if test="matchIfNoContext !=null">
				matchIfNoContext=#{matchIfNoContext},
			</if>
			<if test="propertyId !=null">
				propertyId=#{propertyId},
			</if>
			<if test="langauage !=null">
				language=#{langauage},
			</if>
			<if test="include !=null">
				include=#{include},
			</if>
		    <if test="pickText !=null">
				pickText=#{pickText},
			</if>
			<if test="entryStateUId !=null">
				entryStateGuid=#{entryStateUId}
			</if>
		</set>

		WHERE 
			plEntry.vsPLEntryGuid = #{uid}
 	</update>

	<update id="updatePickListEntryNodeVerAttribByUId" parameterType="org.lexevs.dao.database.ibatis.valuesets.parameter.InsertOrUpdatePickListEntryBean">
		UPDATE 
			${prefix}vsPLEntry plEntry
		<set>
			<if test="pickListEntryNode.isActive !=null">
				isActive=#{pickListEntryNode.isActive},
			</if>
			<if test="pickListEntryNode.owner !=null">
				owner=#{pickListEntryNode.owner},
			</if>
			<if test="pickListEntryNode.status !=null">
				status=#{pickListEntryNode.status},
			</if>
			<if test="pickListEntryNode.effectiveDate !=null">
				effectiveDate=#{pickListEntryNode.effectiveDate},
			</if>
			<if test="pickListEntryNode.expirationDate !=null">
				expirationDate=#{pickListEntryNode.expirationDate},
			</if>
			<if test="entryStateUId !=null">
				entryStateGuid=#{entryStateUId}
			</if>
		</set>

		WHERE 
			plEntry.vsPLEntryGuid = #{uid}
 	</update>

	<select id="getEntryStateUIdByPickListEntryNodeUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultMap="Common.uidResult">
		SELECT 
			entryStateGuid AS uidKey
		FROM
			${prefix}vsPLEntry plEntry
		WHERE
			plEntry.vsPLEntryGuid = #{param1}	
	</select>
	
	<update id="updateEntryStateUIdByPickListEntryUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		UPDATE
			${prefix}vsPLEntry
		SET
			entryStateGuid = #{param2}
		WHERE 
			vsPLEntryGuid = #{param1}
 	</update>

	<select id="getPickListEntryNodeLatestRevisionIdByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT 
			rev.revisionId
		FROM
			${prefix}vsPLEntry plEntry,
			${prefix}vsEntryState es,
			${defaultPrefix}revision rev
		WHERE
			plEntry.vsPLEntryGuid = #{param1}	
		AND
			plEntry.entryStateGuid = es.entryStateGuid	
		AND
			es.revisionGuid = rev.revisionGuid	
	</select>

	<delete id="deletePickListEntryNodeByUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}vsPLEntry
		WHERE
			vsPLEntryGuid = #{param1}
	</delete>

	<select id="getPrevRevIdFromGivenRevIdForPLEntry" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="java.util.TreeMap">
		
			SELECT DISTINCT
				r1.revisionId AS revId,
				r1.revAppliedDate AS revAppliedDate
			FROM
				${prefix}vsPLEntry plEntry,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1, 
				${defaultPrefix}revision r2			
			WHERE
				plEntry.vsPLEntryGuid = #{param1} AND
				(
					NOT EXISTS 
					(
						SELECT 
							es1.entryStateGuid 
						FROM 
							${prefix}vsEntryState es1 
						WHERE 
							plEntry.entryStateGuid = es1.entryStateGuid
					)
					OR
					(
						plEntry.vsPLEntryGuid = es.entryGuid AND 
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
				)
			ORDER BY
				revAppliedDate DESC			
					
	</select>	
	
	<select id="getPickListEntryMetaDataByRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="pickListEntryNodeMetaData">
		
			SELECT 
				plEntry.vsPLEntryGuid,
				plEntry.vsPickListGuid,
				plEntry.plEntryId,
				plEntry.entityCodeNamespace,
				plEntry.entityCode,
				plEntry.entryOrder,
				plEntry.isDefault,
				plEntry.matchIfNoContext,
				plEntry.propertyId,
				plEntry.language,
				plEntry.include,
				plEntry.pickText,
				plEntry.isActive,
				plEntry.owner,
				plEntry.status,
				plEntry.effectiveDate,
				plEntry.expirationDate,
				plEntry.entryStateGuid,
				r1.revAppliedDate revAppliedDate
			FROM
				${prefix}vsPLEntry plEntry,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				plEntry.vsPLEntryGuid = #{param1} AND
				plEntry.entryStateGuid = es.entryStateGuid AND
				es.revisionGuid = r1.revisionGuid AND
				r1.revAppliedDate &lt;= r2.revAppliedDate AND
				r2.revisionID = #{param2}
			ORDER BY
				revAppliedDate DESC		
					
	</select>
	
	<select id="getPickListEntryMetaDataHistoryByRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="pickListEntryNodeMetaData">
		
			SELECT 
				plEntry.vsPLEntryGuid,
				plEntry.vsPickListGuid,
				plEntry.plEntryId,
				plEntry.entityCodeNamespace,
				plEntry.entityCode,
				plEntry.entryOrder,
				plEntry.isDefault,
				plEntry.matchIfNoContext,
				plEntry.propertyId,
				plEntry.language,
				plEntry.include,
				plEntry.pickText,
				plEntry.isActive,
				plEntry.owner,
				plEntry.status,
				plEntry.effectiveDate,
				plEntry.expirationDate,
				plEntry.entryStateGuid,
				r1.revAppliedDate revAppliedDate
			FROM
				${prefix}h_vsPLEntry plEntry,
				${prefix}vsEntryState es,
				${defaultPrefix}revision r1,			
				${defaultPrefix}revision r2		
			WHERE
				plEntry.vsPLEntryGuid = #{param1} AND
				plEntry.entryStateGuid = es.entryStateGuid AND
				(
					(
						es.revisionGuid IS NULL
					)
					OR
					(
						es.revisionGuid = r1.revisionGuid AND
						r1.revAppliedDate &lt;= r2.revAppliedDate AND
						r2.revisionID = #{param2}
					)
				)
			ORDER BY
				revAppliedDate DESC		
					
	</select>
	
	<select id="getEntryNodePropertyIdsListByEntryNodeUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="string">
			SELECT
				propertyId
			FROM
				${prefix}vsProperty
			WHERE
				referenceGuid = #{param1}
			AND
				referenceType = #{param2}
	</select>
	
</mapper>