<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Mon Apr 18 08:46:17 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="VSMapping">

	
	<resultMap id="uriMapResult" type="uriMap">
		<result property="localId" column="id"/>
		<result property="uri" column="uri"/>
		<result property="content" column="idValue"/>
		<discriminator javaType="string" column="supportedAttributeTag">
			<case value="Association" resultMap="supportedAssociationResult"/>
			<case value="AssociationQualifier" resultMap="supportedAssociationQualifierResult"/>
			<case value="CodingScheme" resultMap="supportedCodingSchemeResult"/>
			<case value="ConceptDomain" resultMap="supportedConceptDomainResult"/>
			<case value="ContainerName" resultMap="supportedContainerNameResult"/>
			<case value="Context" resultMap="supportedContextResult"/>
			<case value="DataType" resultMap="supportedDataTypeResult"/>
			<case value="DegreeOfFidelity" resultMap="supportedDegreeOfFidelityResult"/>
			<case value="EntityType" resultMap="supportedEntityTypeResult"/>
			<case value="Hierarchy" resultMap="supportedHierarchyResult"/>
			<case value="Language" resultMap="supportedLanguageResult"/>
			<case value="Namespace" resultMap="supportedNamespaceResult"/>
			<case value="Property" resultMap="supportedPropertyResult"/>
			<case value="PropertyLink" resultMap="supportedPropertyLinkResult"/>
			<case value="PropertyQualifier" resultMap="supportedPropertyQualifierResult"/>
			<case value="PropertyQualifierType" resultMap="supportedPropertyQualifierTypeResult"/>
			<case value="PropertyType" resultMap="supportedPropertyTypeResult"/>
			<case value="RepresentationalForm" resultMap="supportedRepresentationalFormResult"/>
			<case value="SortOrder" resultMap="supportedSortOrderResult"/>
			<case value="Source" resultMap="supportedSourceResult"/>
			<case value="SourceRole" resultMap="supportedSourceRoleResult"/>
			<case value="Status" resultMap="supportedStatusResult"/>
		</discriminator>
	</resultMap>
	
	<resultMap id="supportedAssociationResult" type="supportedAssociation" extends="uriMapResult">
		<result property="codingScheme" column="assnCodingScheme"/>
		<result property="entityCodeNamespace" column="assnNamespace"/>
		<result property="entityCode" column="assnEntityCode"/>
	</resultMap>
	<resultMap id="supportedAssociationQualifierResult" type="supportedAssociationQualifier" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedCodingSchemeResult" type="supportedCodingScheme" extends="uriMapResult">
		<result property="isImported" column="isImported"/>	
	</resultMap>
	<resultMap id="supportedConceptDomainResult" type="supportedConceptDomain" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedContainerNameResult" type="supportedContainerName" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedContextResult" type="supportedContext" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedDataTypeResult" type="supportedDataType" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedDegreeOfFidelityResult" type="supportedDegreeOfFidelity" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedEntityTypeResult" type="supportedEntityType" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedHierarchyResult" type="supportedHierarchy" extends="uriMapResult">
		<result property="associationNames" column="associationNames" typeHandler="cSVtoStringListTypeHandler"/>
		<result property="rootCode" column="rootCode"/>
		<result property="isForwardNavigable" column="isForwardNavigable"/>
	</resultMap>
	<resultMap id="supportedLanguageResult" type="supportedLanguage" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedNamespaceResult" type="supportedNamespace" extends="uriMapResult">
		<result property="equivalentCodingScheme" column="equivalentCodingScheme"/>
	</resultMap>
	<resultMap id="supportedPropertyResult" type="supportedProperty" extends="uriMapResult">
		<result property="propertyType" column="propertyType"/>
	</resultMap>
	<resultMap id="supportedPropertyLinkResult" type="supportedPropertyLink" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedPropertyQualifierResult" type="supportedPropertyQualifier" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedPropertyQualifierTypeResult" type="supportedPropertyQualifierType" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedPropertyTypeResult" type="supportedPropertyType" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedRepresentationalFormResult" type="supportedRepresentationalForm" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedSortOrderResult" type="supportedSortOrder" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedSourceResult" type="supportedSource" extends="uriMapResult">
		<result property="assemblyRule" column="assemblyRule"/>
	</resultMap>
	<resultMap id="supportedSourceRoleResult" type="supportedSourceRole" extends="uriMapResult">
	</resultMap>
	<resultMap id="supportedStatusResult" type="supportedStatus" extends="uriMapResult">
	</resultMap>
	
	<sql id="getUriMapFragment">
		SELECT
	 		supportedAttributeTag,
	 		id,
	 		uri,
	 		idValue,
	 		associationNames,
	 		rootCode,
	 		isForwardNavigable,
	 		isImported,
	 		equivalentCodingScheme,
	 		assemblyRule,
	 		assnCodingScheme,
	 		assnNamespace,
	 		assnEntityCode,
	 		propertyType
	 	FROM
	 		${prefix}vsSupportedAttrib urimap
	</sql>
	
	 <select id="getURIMaps" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="uriMapResult">
	 	<include refid="getUriMapFragment"/>
	 	WHERE
	 		urimap.referenceGuid = #{param1}
	 	AND
	 		urimap.referenceType = #{param2}
	 </select>
	 
	 <select id="getURIMapByLocalNameAndType" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterQuad" resultMap="uriMapResult">
	 	<include refid="getUriMapFragment"/>
	 	WHERE
	 		urimap.referenceGuid = #{param1}
	 	AND
	 		urimap.referenceType = #{param2}
	 	AND
	 		urimap.supportedAttributeTag = #{param3}
	 	AND
	 		urimap.id = #{param4}
	 </select>
	 
	 <select id="getURIMapCountByLocalNameAndType" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple" resultType="int">
	 	SELECT
	 		COUNT(*)
	 	FROM
	 		${prefix}vsSupportedAttrib urimap
	 	WHERE
	 		urimap.referenceGuid = #{param1}
	 	AND
	 		urimap.id = #{param2}
	 	AND
	 		urimap.supportedAttributeTag = #{param3}
	 </select>
	
	 <select id="getValueSetDefinitionURIForSupportedTagAndValue" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="string">
		SELECT 
			vsd.valueSetDefURI
		FROM 
			${prefix}valueSetDefinition vsd, 
			${prefix}vsSupportedAttrib vss
		WHERE 
			vss.supportedAttributeTag = #{param1}
		AND 
			vsd.valueSetDefGuid = vss.referenceGuid
		AND 
			(vss.id = #{param2,jdbcType=VARCHAR} OR vss.uri = #{param2,jdbcType=VARCHAR} OR vss.idValue = #{param2,jdbcType=VARCHAR})
	 </select>
	 
	 <select id="getValueSetDefinitionURIForSupportedTagAndValueAndURI" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple" resultType="string">
		SELECT 
			vsd.valueSetDefURI
		FROM 
			${prefix}valueSetDefinition vsd, 
			${prefix}vsSupportedAttrib vss
		WHERE 
			vss.supportedAttributeTag = #{param1}
		AND 
			vsd.valueSetDefGuid = vss.referenceGuid
		AND 
			(vss.id = #{param2,jdbcType=VARCHAR} OR vss.uri = #{param2,jdbcType=VARCHAR} OR vss.idValue = #{param2,jdbcType=VARCHAR})
		AND 
			vss.uri = #{param3}	
	 </select>
	 
	 <select id="getPickListIdForSupportedTagAndValue" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultType="string">
		SELECT 
			pld.pickListId
		FROM 
			${prefix}vsPickList pld, 
			${prefix}vsSupportedAttrib vss
		WHERE 
			vss.supportedAttributeTag = #{param1}
		AND 
			pld.vsPickListGuid = vss.referenceGuid
		AND 
			(vss.id = #{param2} OR vss.uri = #{param2} OR vss.idValue = #{param2})
	 </select>
	
     <insert id="insertURIMap" parameterType="org.lexevs.dao.database.ibatis.codingscheme.parameter.InsertOrUpdateURIMapBean">
		INSERT INTO ${prefix}vsSupportedAttrib (
			vsSuppAttribGuid,
			referenceGuid,
			referenceType,
			supportedAttributeTag,
			id,
			uri,
			idValue,
			associationNames,
			rootCode,
			isForwardNavigable,
			isImported,
			equivalentCodingScheme,
			assemblyRule,
			assnCodingScheme,
	 		assnNamespace,
	 		assnEntityCode,
	 		propertyType
		) VALUES (
			#{uid, 
			#{codingSchemeUId,
			#{referenceType,jdbcType=VARCHAR},
			#{supportedAttributeTag,jdbcType=VARCHAR}, 
			#{uriMap.localId,jdbcType=VARCHAR}, 
			#{uriMap.uri,jdbcType=VARCHAR},
			#{uriMap.content,jdbcType=VARCHAR},
			#{associationNames,jdbcType=VARCHAR}

			<if test="uriMap.rootCode !=null">
				#{uriMap.rootCode:VARCHAR},
			</if>
			<if test="uriMap.rootCode ==null">
				null,
			</if>

		 <if test="uriMap.isForwardNavigable !=null">
			 #{uriMap.isForwardNavigable,handler=numericBooleanTypeHandler},
		 </if>
		 <if test="uriMap.isForwardNavigable ==null">
			 null,
		 </if>

		 <if test="uriMap.isImported !=null">
			 #{uriMap.isImported,handler=numericBooleanTypeHandler},
		 </if>
		 <if test="uriMap.isImported ==null">
			 null,
		 </if>

		 <if test="uriMap.equivalentCodingScheme !=null">
			 #{uriMap.equivalentCodingScheme:VARCHAR},
		 </if>
		 <if test="uriMap.equivalentCodingScheme ==null">
			 null,
		 </if>

		 <if test="uriMap.assemblyRule !=null">
			 #{uriMap.assemblyRule:VARCHAR},
		 </if>
		 <if test="uriMap.assemblyRule ==null">
			 null,
		 </if>

		 <if test="uriMap.codingScheme !=null">
			 #{uriMap.codingScheme:VARCHAR},
		 </if>
		 <if test="uriMap.codingScheme ==null">
			 null,
		 </if>

		 <if test="uriMap.entityCodeNamespace !=null">
			 #{uriMap.entityCodeNamespace:VARCHAR},
		 </if>
		 <if test="uriMap.entityCodeNamespace ==null">
			 null,
		 </if>

		 <if test="uriMap.entityCode !=null">
			 #{uriMap.entityCode:VARCHAR},
		 </if>
		 <if test="uriMap.entityCode ==null">
			 null,
		 </if>

		 <if test="uriMap.propertyType !=null">
			 #{uriMap.propertyType.name:VARCHAR}
		 </if>
		 <if test="uriMap.propertyType ==null">
			 null
		 </if>

		)
  </insert>

	<update id="updateUriMapByLocalId" parameterType="org.lexevs.dao.database.ibatis.codingscheme.parameter.InsertOrUpdateURIMapBean">
		UPDATE
			${prefix}vsSupportedAttrib
		<set>
			<if test="uriMap.uri !=null">
				uri = #{uriMap.uri},
			</if>
			<if test="uriMap.localId !=null">
				id = #{uriMap.localId},
			</if>
			<if test="associationNames !=null">
				associationNames = #{associationNames},
			</if>
			<if test="uriMap.rootCode !=null">
				rootCode = #{uriMap.rootCode},
			</if>
			<if test="uriMap.isForwardNavigable !=null">
				isForwardNavigable = #{uriMap.isForwardNavigable,handler=numericBooleanTypeHandler},
			</if>
			<if test="uriMap.isImported !=null">
				isImported = #{uriMap.isImported,handler=numericBooleanTypeHandler},
			</if>
			<if test="uriMap.equivalentCodingScheme !=null">
				equivalentCodingScheme = #{uriMap.equivalentCodingScheme},
			</if>
			<if test="uriMap.assemblyRule !=null">
				assemblyRule = #{uriMap.assemblyRule},
			</if>
			<if test="uriMap.codingScheme !=null">
				codingScheme = #{uriMap.codingScheme},
			</if>
			<if test="uriMap.entityCodeNamespace !=null">
				entityCodeNamespace = #{uriMap.entityCodeNamespace},
			</if>
			<if test="uriMap.entityCode !=null">
				entityCode = #{uriMap.entityCode},
			</if>
			<if test="uriMap.propertyType !=null">
				propertyType = #{uriMap.propertyType}
			</if>
		</set>

		
		WHERE
			referenceGuid = #{codingSchemeUId
		AND
			referenceType = #{referenceType}
		AND
			supportedAttributeTag = #{supportedAttributeTag}
		AND
			id = #{uriMap.localId}	
	</update>
	
	
	<delete id="deleteMappingsByReferenceGuid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}vsSupportedAttrib
		WHERE
			referenceGuid = #{param1}
		AND
			referenceType = #{param2}
	</delete>
	
	<delete id="deleteMappingsByReferenceGuidTypeAndSuppAttrib" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple">
		DELETE FROM
			${prefix}vsSupportedAttrib
		WHERE
			referenceGuid = #{param1}
		AND
			referenceType = #{param2}
		AND
			supportedAttributeTag = #{param3}
	</delete>
    
</mapper>