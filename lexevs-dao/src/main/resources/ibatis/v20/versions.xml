<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Fri Apr 15 16:47:23 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Versions">

	<resultMap id="entryStateResult" type="org.LexGrid.versions.EntryState">
		<result property="containingRevision" column="currentRevisionId"/>
		<result property="relativeOrder" column="relativeOrder"/>
		<result property="changeType" column="changeType"/>
		<result property="prevRevision" column="previousRevisionId"/>
	</resultMap>
	
	<resultMap id="systemReleaseMetadataResult" type="org.LexGrid.versions.SystemRelease">
		<result property="releaseId" column="releaseId"/>
		<result property="releaseURI" column="releaseURI"/>
		<result property="releaseDate" column="releaseDate"/>
		<result property="releaseAgency" column="releaseAgency"/>
		<result property="basedOnRelease" column="basedOnRelease"/>
		<result property="entityDescription.content" column="description"/>
	</resultMap>
	
	<select id="getSystemReleaseGuidByUri" parameterType="string" resultMap="Common.uidResult">
		SELECT
			sysRel.releaseGuid AS uidKey
		FROM
			${defaultPrefix}systemRelease sysRel
		WHERE
			sysRel.releaseURI = #{param1}	
     </select>
     
    <select id="getPrevRevIdFromGivenRevIdForEntry" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultType="string">
	
	
			SELECT
				DISTINCT(r0.revisionId)
			FROM
				${prefix}entryState es0
			INNER JOIN
				${defaultPrefix}revision r0		
			ON
				es0.revisionGuid = r0.revisionGuid
			WHERE
				es0.entryGuid = #{param1}  
			AND
				(
				r0.revAppliedDate = (
	
				SELECT
					MAX(r1.revAppliedDate)
				FROM
					${prefix}entryState es1
				LEFT JOIN
					${defaultPrefix}revision r1		
				ON
					es1.revisionGuid = r1.revisionGuid
				WHERE
					es1.entryGuid = #{param1}
				AND
					es1.changeType!= 'DEPENDENT'	
				AND 
	        		r1.revAppliedDate &lt;=
			      		( 
			      		SELECT
				      		r2.revAppliedDate
						FROM
							${prefix}revision r2
			      		WHERE
			        		r2.revisionId = #{param2}
			     		)
		     	)
	     	)
		
	</select>	
     
     <select id="getSystemReleaseMetaDataByUri" parameterType="string" resultMap="Versions.systemReleaseMetadataResult">
		SELECT
			sysRel.releaseURI,
			sysRel.releaseId,
			sysRel.releaseDate,
			sysRel.releaseAgency,
			sysRel.basedOnRelease,
			sysRel.description
		FROM
			${defaultPrefix}systemRelease sysRel
		WHERE
			sysRel.releaseURI = #{param1}	
     </select>
     
     <select id="getSystemReleaseMetaDataById" parameterType="string" resultMap="Versions.systemReleaseMetadataResult">
		SELECT
			sysRel.releaseURI,
			sysRel.releaseId,
			sysRel.releaseDate,
			sysRel.releaseAgency,
			sysRel.basedOnRelease,
			sysRel.description
		FROM
			${defaultPrefix}systemRelease sysRel
		WHERE
			sysRel.releaseId = #{param1}	
     </select>
     
  	<select id="getEntryStateByEntryUidAndRevisionId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple" resultMap="Versions.entryStateResult">
		SELECT
			es.changeType changeType,
			es.relativeOrder relativeOrder,
			cr.revisionId currentRevisionId,
			pr.revisionId previousRevisionId
		FROM
			${prefix}entryState es
		LEFT JOIN ${defaultPrefix}revision cr ON
			es.revisionGuid = cr.revisionGuid
		LEFT JOIN ${defaultPrefix}revision pr ON
			es.prevRevisionGuid = pr.revisionGuid
		WHERE
			es.entryGuid = #{param1}
		AND
			cr.revisionId = #{param2}		
     </select>

	<select id="getPreviousRevisionIdForEntryUid" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultType="string">
		SELECT
			rev2.revisionId
		FROM
			${defaultPrefix}revision rev
		INNER JOIN
			${prefix}entryState es
			ON es.revisionGuid = rev.revisionGuid
		INNER JOIN
			${defaultPrefix}revision rev2
			ON es.prevRevisionGuid = rev2.revisionGuid
		WHERE
			es.entryGuid = #{param2}
		AND
			rev.revisionId = #{param1}	
     </select>
     
     <update id="updatePreviousEntryStateUIds" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTriple">
     	UPDATE ${prefix}entryState
		SET 
			prevEntryStateGuid = #{param3}
		WHERE
			prevEntryStateGuid = #{param2}
		AND
			entryGuid = #{param1}
     </update>
     
	<update id="updateEntryStateById" parameterType="map">
		UPDATE entryState
		SET 
			changeType = #{entryState.changeType}
		where
			entryStateId = #{id}
 	</update>
 	
 	<insert id="insertSystemRelease" parameterType="org.lexevs.dao.database.ibatis.versions.parameter.InsertSystemReleaseBean">
		INSERT INTO ${defaultPrefix}systemRelease (
			releaseGuid,
			releaseURI,
			releaseId,
			releaseDate,
			basedOnRelease,
			releaseAgency,
			description
			)
		VALUES (
			#{releaseUId},
			#{systemRelease.releaseURI},
			#{systemRelease.releaseId},
			#{systemRelease.releaseDate},
			#{systemRelease.basedOnRelease},
			#{systemRelease.releaseAgency},
			#{systemRelease.entityDescription.content}
			)
 	</insert>
 	
 	<insert id="insertRevision" parameterType="org.lexevs.dao.database.ibatis.versions.parameter.InsertRevisionBean">
		INSERT INTO ${defaultPrefix}revision (
			revisionGuid,
			releaseGuid,			
			revisionId,
			changeAgent,
			revisionDate,
			revAppliedDate,
			editOrder,
			changeInstructions,
			description
			)
		VALUES (
			#{revisionGuid},	
					
			<if test="releaseGuid != null">
				#{releaseGuid},
			</if>	
			<if test="releaseGuid == null">
				null,
			</if>
					
			#{revision.revisionId},	
					
			<if test="revision != null and revision.changeAgent != null">
				#{revision.changeAgent},
			</if>	
			<if test="revision == null or revision.changeAgent == null">
				null,
			</if>	
				
			<if test="revision != null and revision.revisionDate != null">
				#{revision.revisionDate}, 
			</if>	
			<if test="revision == null or revision.revisionDate == null">
				null,
			</if>	
				
			#{revAppliedDate},	
					
			<if test="revision != null and revision.editOrder != null">
				#{revision.editOrder}, 
			</if>
			<if test="revision == null or revision.editOrder == null">
				null,
			</if>	
						
			<if test="revision != null and revision.changeInstructions != null">
				#{revision.changeInstructions.content},
			</if>
			<if test="revision == null or revision.changeInstructions == null">
				null,
			</if>
			
			<if test="revision != null and revision.entityDescription != null">
				#{revision.entityDescription.content}				
			</if>
			<if test="revision == null or revision.entityDescription == null">
				null
			</if>
			)
 	</insert>
 	
 	<insert id="insertEntryState" parameterType="org.lexevs.dao.database.ibatis.versions.parameter.InsertEntryStateBean">
		INSERT INTO ${prefix}entryState (
			entryStateGuid,
			entryGuid,
			entryType,
			changeType,
			relativeOrder,
			revisionGuid,
			prevRevisionGuid,
			prevEntryStateGuid
			)
		VALUES (
			#{entryStateUId},
			#{entryUId},
			#{entryType,jdbcType=VARCHAR},
			#{entryState.changeType,jdbcType=VARCHAR},
			#{entryState.relativeOrder,jdbcType=NUMERIC},
			#{revisionUId},
			#{prevRevisionUId},
			#{previousEntryStateUId}
			)
 	</insert>
 	
 	<select id="getRevisionGuidFromId" parameterType="string" resultType="string">
   		SELECT
   			revisionGuid
   		FROM
   			${defaultPrefix}revision
		WHERE
			revisionId = #{param1}
   </select>

	<select id="checkEntryStateExists" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}entryState es
		WHERE
			es.entryStateGuid = #{param1}
     </select>
     
     <select id="checkRevisionExistsInVSEntryState" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}vsEntryState es
		WHERE
			es.revisionGuid = #{param1}
     </select>

	<select id="checkRevisionExistsInEntryState" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}entryState es
		WHERE
			es.revisionGuid = #{param1}
     </select>
     
     <select id="checkSystemReleaseExistsInCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}codingScheme
		WHERE
			releaseGuid = #{param1}
     </select>
     
     <select id="checkSystemReleaseExistsInValueSetDefinition" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}valueSetDefinition
		WHERE
			releaseGuid = #{param1}
     </select>
     
     <select id="checkSystemReleaseExistsInPickListDefinition" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}vsPickList
		WHERE
			releaseGuid = #{param1}
     </select>

	<delete id="deleteAllEntrySateEntriesByEntryUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryGuid = #{param1}
	</delete>
	
	<update id="setPreviousEntryStatesNullByEntryUid" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		UPDATE
			${prefix}entryState
		SET
			prevEntryStateGuid = NULL
		WHERE
			entryGuid = #{param1}
	</update>
	
	<delete id="deleteAllCodingSchemeEntrySatesByCodingSchemeUId" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryGuid = #{param1}
	</delete>
	
	<delete id="deletaAllCSPropEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				prop.propertyGuid
			FROM
				${prefix}codingScheme cs,
				${prefix}property prop
			WHERE
				prop.referenceGuid = cs.codingSchemeGuid 
			AND
				cs.codingSchemeGuid = #{param2}
			)
	</delete>
	
    <delete id="deletaAllEntityPropertyEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				prop.propertyGuid
			FROM
				${prefix}entity ent,
				${prefix}property prop
			WHERE
				prop.referenceGuid = ent.entityGuid
			AND
				ent.codingSchemeGuid = #{param2}
			)
	</delete>
	
    <delete id="deletaAllEntityEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				entityGuid
			FROM
				${prefix}entity ent
			WHERE
				ent.codingSchemeGuid = #{param2}
			)
	</delete>
	
    <delete id="deletaAllRelationPropertyEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				prop.propertyGuid
			FROM
				${prefix}relation rel,
				${prefix}property prop
			WHERE
				prop.referenceGuid = rel.relationGuid
			AND
				rel.codingSchemeGuid = #{param2}
			)
	</delete>
	
	<delete id="deletaAllRelationEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				relationGuid
			FROM
				${prefix}relation rel
			WHERE
				rel.codingSchemeGuid = #{param2}
			)
	</delete>
	
	<delete id="deletaAllAssnTargetEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				assnTarget.entityAssnsGuid
			FROM
				${prefix}relation rel,
				${prefix}associationPredicate assnPred,
				${prefix}entityAssnsToEntity assnTarget
			WHERE
				assnTarget.associationPredicateGuid = assnPred.associationPredicateGuid
			AND
				assnPred.relationGuid = rel.relationGuid
			AND
				rel.codingSchemeGuid = #{param2}
			)
	</delete>
	
    <delete id="deletaAllAssnDataEntryStateOfCodingScheme" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				assnData.entityAssnsDataGuid
			FROM
				${prefix}relation rel,
				${prefix}associationPredicate assnPred,
				${prefix}entityAssnsToData assnData
			WHERE
				assnData.associationPredicateGuid = assnPred.associationPredicateGuid
			AND
				assnPred.relationGuid = rel.relationGuid
			AND
				rel.codingSchemeGuid = #{param2}
			)
	</delete>
	
	<delete id="deletaAllEntityPropEntryStateOfEntity" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				prop.propertyGuid
			FROM
				${prefix}entity ent,
				${prefix}property prop
			WHERE
				ent.entityGuid = #{param2}
			AND
				ent.entityGuid = prop.referenceGuid				
			)
	</delete>
	
	<delete id="deletaAllAssnTargetEntryStateOfRelation" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				assnTarget.entityAssnsGuid
			FROM
				${prefix}relation rel,
				${prefix}associationPredicate assnPred,
				${prefix}entityAssnsToEntity assnTarget
			WHERE
				assnTarget.associationPredicateGuid = assnPred.associationPredicateGuid
			AND
				assnPred.relationGuid = rel.relationGuid
			AND
				rel.relationGuid = #{param2}
			)
	</delete>
	
	<delete id="deletaAllAssnDataEntryStateOfRelation" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				assnData.entityAssnsDataGuid
			FROM
				${prefix}relation rel,
				${prefix}associationPredicate assnPred,
				${prefix}entityAssnsToData assnData
			WHERE
				assnData.associationPredicateGuid = assnPred.associationPredicateGuid
			AND
				assnPred.relationGuid = rel.relationGuid
			AND
				rel.relationGuid = #{param2}
			)
	</delete>

    <delete id="deletaAllRelationPropertyEntryStateOfRelation" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameterTuple">
		DELETE FROM
			${prefix}entryState
		WHERE
			entryType = #{param1}
		AND
			entryGuid 
		IN	( 
			SELECT
				prop.propertyGuid
			FROM
				${prefix}relation rel,
				${prefix}property prop
			WHERE
				prop.referenceGuid = rel.relationGuid
			AND
				rel.relationGuid = #{param2}
			)
	</delete>
	
	<delete id="deleteRevisionById" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${defaultPrefix}revision
		WHERE
			revisionId = #{param1}
	</delete>		
	
	<delete id="deleteSystemReleaseById" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${defaultPrefix}systemRelease
		WHERE
			releaseId = #{param1}
	</delete>
	
	<delete id="deleteSystemReleaseByUri" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter">
		DELETE FROM
			${defaultPrefix}systemRelease
		WHERE
			releaseURI = #{param1}
	</delete>
	
	<select id="isValidRevision" parameterType="org.lexevs.dao.database.ibatis.parameter.PrefixedParameter" resultType="string">
		SELECT
			count(1)
		FROM
			${prefix}revision rev
		WHERE
			rev.revisionId = #{param1}
     </select>
    
    <select id="getRevisionIdByDate" parameterType="java.sql.Timestamp" resultType="string">
		
			SELECT
				revisionId
			FROM
				${defaultPrefix}revision
			WHERE revAppliedDate =
			(
				SELECT 
					MAX(sub.revAppliedDate)
				FROM
					${defaultPrefix}revision sub
				WHERE
					sub.revAppliedDate &lt;= #{param1}
			)
			
     </select> 
</mapper>