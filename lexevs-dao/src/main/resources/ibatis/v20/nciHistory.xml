<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="NciHistory">

	<typeAlias alias="nciChangeEvent" type="org.LexGrid.LexBIG.DataModel.NCIHistory.NCIChangeEvent" />
	<typeAlias alias="systemRelease" type="org.LexGrid.versions.SystemRelease" />
	<typeAlias alias="changeTypeHandler" type="org.lexevs.dao.database.ibatis.sqlmap.NCIHistoryChangeTypeTypeHandler"/>
	<typeAlias alias="conceptReference" type="org.LexGrid.LexBIG.DataModel.Core.ConceptReference"/>
	
	<resultMap id="conceptReferenceResult" class="conceptReference">
		<result property="code" column="entityCode"/>
		<result property="codeNamespace" column="entityNamespace" />
	</resultMap>

	<resultMap id="nciChangeEventResult" class="nciChangeEvent">
		<result property="editaction" column="editAction" typeHandler="changeTypeHandler"/>
		<result property="conceptcode" column="entityCode"/>
		<result property="conceptName" column="conceptName"/>
		<result property="editDate" column="editDate"/>
		<result property="referencecode" column="referenceCode"/>
		<result property="referencename" column="referenceName"/>
	</resultMap>

	<resultMap id="systemReleaseResult" class="systemRelease">
		<result property="entityDescription.content" column="description"/>
		<result property="releaseId" column="releaseId" />
		<result property="releaseURI" column="releaseURI" />
		<result property="releaseDate" column="releaseDate"/>
		<result property="releaseAgency" column="releaseAgency" />
		<result property="basedOnRelease" column="basedOnRelease" />
	</resultMap>
	
	<resultMap id="entityCodeResult" class="string">
		<result property="java.lang.String" column="entityCode" />
	</resultMap>
	
	<resultMap id="dateResult" class="date">
		<result property="java.util.Date" column="releaseDate" />
	</resultMap>
	
	<resultMap id="versionsResult" class="string">
		<result property="java.util.String" column="releaseId" />
	</resultMap>
	
	<delete id="deleteSystemRelease"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean">
		DELETE 
		FROM
			${defaultPrefix}nciHistSystemRelease
		WHERE
			codingSchemeUri = #param1#
	</delete>
	
	<sql id="getBaseLineFragment">
		SELECT 
			releaseURI,
			releaseId,
			releaseDate,
			basedOnRelease,
			releaseAgency,
			description
		FROM
			${defaultPrefix}nciHistSystemRelease systemRelease
		WHERE
			systemRelease.codingSchemeUri = #param1#
		
	</sql>
	
	<select id="getSystemReleaseUidForDate"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="Common.uidResult">
		SELECT 
			releaseGuid AS uidKey
		FROM
			${defaultPrefix}nciHistSystemRelease systemRelease
		WHERE
			systemRelease.codingSchemeUri = #param1#
		AND 
				releaseDate = 
					(
					SELECT
		      			MIN(sysReleaseDate.releaseDate)
		    		FROM
		        		${defaultPrefix}nciHistSystemRelease sysReleaseDate
		        	WHERE
						sysReleaseDate.codingSchemeUri = #param1#
					AND
						sysReleaseDate.releaseDate >= #param2#
					)    	
	</select>
	
 	<select id="getReferencesForVersion"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="entityCodeResult">
		SELECT
		 	entityCode 
		FROM 
		 	${defaultPrefix}nciHist hist 
		LEFT JOIN 
		 	${defaultPrefix}nciHistSystemRelease sysr 
		ON 
		 	hist.releaseGuid = sysr.releaseGuid 
		WHERE 
		 	sysr.releaseId = #param1# 
		GROUP BY 
		 	hist.entityCode
	</select>
	
	 <select id="getDateForVersion"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="dateResult">
		SELECT
			releasedate 
		FROM
			${defaultPrefix}nciHistSystemRelease 
		WHERE 
			releaseid = #param1#
	</select>
	
	<select id="getVersionsForDateRange"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="versionsResult">
		SELECT
			releaseid
		FROM
			${defaultPrefix}nciHistSystemRelease
		WHERE
			releaseDate 
		BETWEEN 
			#param1#
		AND 
			#param2#
	</select>
		
	<sql id="getChangeEventFragment">
		SELECT 
			entityCode,
			conceptName,
			editAction,
			editDate,
			releaseAgency,
			referenceCode,
			referenceName
		FROM
			${defaultPrefix}nciHist nciHist
		INNER JOIN
			${defaultPrefix}nciHistSystemRelease systemRelease
		ON
			nciHist.releaseGuid = systemRelease.releaseGuid
		WHERE
			systemRelease.codingSchemeUri = #param1#
	</sql>
	
	<select id="getChangeEvent"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		
		<isNotNull property="param2">
		AND (
				nciHist.entityCode = #param2#
				
				OR
				
				nciHist.referenceCode = #param2#
			)
		</isNotNull>
		
		<isNotNull property="param3">
		AND
			editDate >= #param3#
		</isNotNull>
		
		<isNotNull property="param4">
		AND
			#param4# >= editDate
		</isNotNull>
	</select> 
	
	<select id="getChangeEventForDate"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		
		<isNotNull property="param2">
		AND (
				nciHist.entityCode = #param2#
				OR
				nciHist.referenceCode = #param2#
			)
		</isNotNull>
		
		<isNotNull property="param3">
		AND
			editDate = #param3#
		</isNotNull>
	</select> 
	
	<select id="getConceptCreationVersion"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.entityCode = #param2#

		AND
			editAction = 'create'
	</select> 
	
	<select id="getConceptChangeVersions"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.entityCode = #param2#
			
		<isNotNull property="param3">
		AND
			editDate >= #param3#
		</isNotNull>
		
		<isNotNull property="param4">
		AND
			#param4# >= editDate
		</isNotNull>
	</select> 
	
	<select id="getChangeEventForSystemReleaseUri"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		
		<isNotNull property="param2">
		AND (
				nciHist.entityCode = #param2#
				OR
				nciHist.referenceCode = #param2#
			)
		</isNotNull>
		
		AND
			systemRelease.releaseUri = #param3#
	</select> 
	
	<select id="getDecendants"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.entityCode = #param2#
		AND
			(
				nciHist.editAction = 'split'
				OR
				nciHist.editAction = 'merge'
			)
	</select> 
	
	<select id="getAncestors"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.referenceCode = #param2#
		AND
			(
				nciHist.editAction = 'split'
				OR
				nciHist.editAction = 'merge'
			)
	</select> 

	<select id="getBaseLines"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="systemReleaseResult">
		
		<include refid="getBaseLineFragment"/>
		
		<isNotNull property="param2">
		AND
			releaseDate >= #param2#
		</isNotNull>
		<isNotNull property="param3">
		AND
			#param3# >= releaseDate
		</isNotNull>
	</select> 
	
	<select id="getEarliestBaseLine"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="systemReleaseResult">
		
		<include refid="getBaseLineFragment"/>
		
		AND
			releaseDate = (
			SELECT
      			MIN(releaseDate)
    		FROM
        		${defaultPrefix}nciHistSystemRelease sysReleaseDate
        	WHERE
				sysReleaseDate.codingSchemeUri = #param1#
			)    	
	</select> 
	
	<select id="getLatestBaseLine"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="systemReleaseResult">
		
		<include refid="getBaseLineFragment"/>
		
		AND
			releaseDate = (
			SELECT
      			MAX(releaseDate)
    		FROM
        		${defaultPrefix}nciHistSystemRelease sysReleaseDate
        	WHERE
				sysReleaseDate.codingSchemeUri = #param1#
			)    	
	</select> 
	

	<select id="getSystemReleaseForUri"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="systemReleaseResult">
	
		<include refid="getBaseLineFragment" />
	
			AND
			releaseUri = #param2#
	</select> 
	
	<select id="getSystemReleaseForUid"
		parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean"
		resultMap="systemReleaseResult">
	
		<include refid="getBaseLineFragment" />
			AND
			systemRelease.releaseGuid = #param2,handler=variablePrimaryKeyTypeHandler#
	</select> 
	
	<insert id="insertSystemRelease" parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean">
		INSERT INTO ${defaultPrefix}nciHistSystemRelease (
			releaseGuid,
			codingSchemeUri,
			releaseURI,
			releaseId,
			releaseDate,
			basedOnRelease,
			releaseAgency,
			description
			)
		VALUES (
			#param1,handler=variablePrimaryKeyTypeHandler#,
			#param2#,
			#param3.releaseURI#,
			#param3.releaseId#,
			#param3.releaseDate#,
			#param3.basedOnRelease#,
			#param3.releaseAgency#,
			#param3.entityDescription.content#
			)
 	</insert>
 	
 	<insert id="insertNciChangeEvent" parameterClass="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean">
		INSERT INTO ${defaultPrefix}nciHist (
			ncitHistGuid,
			releaseGuid,
			entityCode,
			conceptName,
			editAction,
			editDate,
			referenceCode,
			referenceName
			)
		VALUES (
			#param1,handler=variablePrimaryKeyTypeHandler#,
			#param2,handler=variablePrimaryKeyTypeHandler#,
			#param3.conceptcode#,
			#param3.conceptName#,
			#param3.editaction#,
			#param3.editDate#,
			#param3.referencecode#,
			#param3.referencename#
			)
 	</insert>
		
</sqlMap>