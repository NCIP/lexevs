<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Mon Apr 18 08:46:17 EDT 2022-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="NciHistory">

	
	<resultMap id="conceptReferenceResult" type="conceptReference">
		<result property="code" column="entityCode"/>
		<result property="codeNamespace" column="entityNamespace"/>
	</resultMap>

	<resultMap id="nciChangeEventResult" type="nciChangeEvent">
		<result property="conceptcode" column="entityCode"/>
		<result property="conceptName" column="conceptName"/>
		<result property="editAction" column="editAction" />
		<result property="editDate" column="editDate"/>
		<result property="releaseAgency" column="releaseAgency"/>	
		<result property="referencecode" column="referenceCode"/>
		<result property="referencename" column="referenceName"/>
	</resultMap>

	<resultMap id="systemReleaseResult" type="systemRelease">
		<result property="entityDescription.content" column="description"/>
		<result property="releaseId" column="releaseId"/>
		<result property="releaseURI" column="releaseURI"/>
		<result property="releaseDate" column="releaseDate"/>
		<result property="releaseAgency" column="releaseAgency"/>
		<result property="basedOnRelease" column="basedOnRelease"/>
	</resultMap>
	
	<resultMap id="entityCodeResult" type="string">
		<result property="java.lang.String" column="entityCode"/>
	</resultMap>
	
	<resultMap id="dateResult" type="date">
		<result property="java.util.Date" column="releaseDate"/>
	</resultMap>
	
	<resultMap id="versionsResult" type="string">
		<result property="java.util.String" column="releaseId"/>
	</resultMap>
	
	<delete id="deleteSystemRelease" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean">
		DELETE 
		FROM
			${defaultPrefix}nciHistSystemRelease
		WHERE
			codingSchemeUri = #{param1}
	</delete>
	
	<sql id="getBaseLineFragment">
		SELECT 
			releaseURI,
			releaseId,
			releaseDate,
			basedOnRelease,
			releaseAgency,
			description
		FROM
			${defaultPrefix}nciHistSystemRelease systemRelease
		WHERE
			systemRelease.codingSchemeUri = #{param1}
		
	</sql>
	
	<select id="getSystemReleaseUidForDate" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="Common.uidResult">
		SELECT 
			releaseGuid AS uidKey
		FROM
			${defaultPrefix}nciHistSystemRelease systemRelease
		WHERE
			systemRelease.codingSchemeUri = #{param1}
		AND 
				releaseDate = 
					(
					SELECT
		      			MIN(sysReleaseDate.releaseDate)
		    		FROM
		        		${defaultPrefix}nciHistSystemRelease sysReleaseDate
		        	WHERE
						sysReleaseDate.codingSchemeUri = #{param1}
					AND
						sysReleaseDate.releaseDate &gt;= #{param2}
					)    	
	</select>
	
 	<select id="getReferencesForVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="entityCodeResult">
		SELECT
		 	entityCode 
		FROM 
		 	${defaultPrefix}nciHist hist 
		LEFT JOIN 
		 	${defaultPrefix}nciHistSystemRelease sysr 
		ON 
		 	hist.releaseGuid = sysr.releaseGuid 
		WHERE 
		 	sysr.releaseId = #{param1} 
		GROUP BY 
		 	hist.entityCode
	</select>
	
	 <select id="getDateForVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="dateResult">
		SELECT
			releasedate 
		FROM
			${defaultPrefix}nciHistSystemRelease 
		WHERE 
			releaseid = #{param1}
	</select>
	
	<select id="getVersionsForDateRange" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="versionsResult">
		SELECT
			releaseid
		FROM
			${defaultPrefix}nciHistSystemRelease
		WHERE
			releaseDate 
		BETWEEN 
			#{param1}
		AND 
			#{param2}
	</select>
		
	<sql id="getChangeEventFragment">
		SELECT 
			entityCode,
			conceptName,
			UPPER(editAction),
			editDate,
			releaseAgency,
			referenceCode,
			referenceName
		FROM
			${defaultPrefix}nciHist nciHist
		INNER JOIN
			${defaultPrefix}nciHistSystemRelease systemRelease
		ON
			nciHist.releaseGuid = systemRelease.releaseGuid
		WHERE
			systemRelease.codingSchemeUri = #{param1}
	</sql>
	
	<select id="getChangeEvent" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		
		<if test="param2 != null">
		AND (
				nciHist.entityCode = #{param2}
				
				OR
				
				nciHist.referenceCode = #{param2}
			)
		</if>
		
		<if test="param3 != null">
		AND
			editDate &gt;= #{param3}
		</if>
		
		<if test="param4 != null">
		AND
			#{param4} &gt;= editDate
		</if>
	</select> 
	
	<select id="getChangeEventForDate" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		
		<if test="param2 != null">
		AND (
				nciHist.entityCode = #{param2}
				OR
				nciHist.referenceCode = #{param2}
			)
		</if>
		
		<if test="param3 != null">
		AND
			editDate = #{param3}
		</if>
	</select> 
	
	<select id="getConceptCreationVersion" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.entityCode = #{param2}

		AND
			editAction = 'create'
	</select> 
	
	<select id="getConceptChangeVersions" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.entityCode = #{param2}
			
		<if test="param3 != null">
		AND
			editDate &gt;= #{param3}
		</if>
		
		<if test="param4 != null">
		AND
			#{param4} &gt;= editDate
		</if>
	</select> 
	
	<select id="getChangeEventForSystemReleaseUri" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		
		<if test="param2 != null">
		AND (
				nciHist.entityCode = #{param2}
				OR
				nciHist.referenceCode = #{param2}
			)
		</if>
		
		AND
			systemRelease.releaseUri = #{param3}
	</select> 
	
	<select id="getDecendants" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.entityCode = #{param2}
		AND
			(
				nciHist.editAction = 'split'
				OR
				nciHist.editAction = 'merge'
			)
	</select> 
	
	<select id="getAncestors" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="nciChangeEventResult">
		
		<include refid="getChangeEventFragment"/>
		AND
			nciHist.referenceCode = #{param2}
		AND
			(
				nciHist.editAction = 'merge'
				OR
				nciHist.editAction = 'merge'
			)
	</select> 

	<select id="getBaseLines" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="systemReleaseResult">
		
		<include refid="getBaseLineFragment"/>
		
		<if test="param2 != null">
		AND
			releaseDate &gt;= #{param2}
		</if>
		<if test="param3 != null">
		AND
			#{param3} &gt;= releaseDate
		</if>
	</select> 
	
	<select id="getEarliestBaseLine" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="systemReleaseResult">
		
		<include refid="getBaseLineFragment"/>
		
		AND
			releaseDate = (
			SELECT
      			MIN(releaseDate)
    		FROM
        		${defaultPrefix}nciHistSystemRelease sysReleaseDate
        	WHERE
				sysReleaseDate.codingSchemeUri = #{param1}
			)    	
	</select> 
	
	<select id="getLatestBaseLine" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="systemReleaseResult">
		
		<include refid="getBaseLineFragment"/>
		
		AND
			releaseDate = (
			SELECT
      			MAX(releaseDate)
    		FROM
        		${defaultPrefix}nciHistSystemRelease sysReleaseDate
        	WHERE
				sysReleaseDate.codingSchemeUri = #{param1}
			)    	
	</select> 
	

	<select id="getSystemReleaseForUri" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="systemReleaseResult">
	
		<include refid="getBaseLineFragment"/>
	
			AND
			releaseUri = #{param2}
	</select> 
	
	<select id="getSystemReleaseForUid" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean" resultMap="systemReleaseResult">
	
		<include refid="getBaseLineFragment"/>
			AND
			systemRelease.releaseGuid = #{param2}
	</select> 
	
	<insert id="insertSystemRelease" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean">
		INSERT INTO ${defaultPrefix}nciHistSystemRelease (
			releaseGuid,
			codingSchemeUri,
			releaseURI,
			releaseId,
			releaseDate,
			basedOnRelease,
			releaseAgency,
			description
			)
		VALUES (
			#{releaseGuid},
			#{codingSchemeUri},
			#{releaseURI},
			#{releaseId},
			#{releaseDate},
			#{basedOnRelease},
			#{releaseAgency},
			#{description}
			)
 	</insert>
 	
 	<insert id="insertNciChangeEvent" parameterType="org.lexevs.dao.database.ibatis.parameter.SequentialMappedParameterBean">
		INSERT INTO ${defaultPrefix}nciHist (
			ncitHistGuid,
			releaseGuid,
			entityCode,
			conceptName,
			editAction,
			editDate,
			referenceCode,
			referenceName
			)
		VALUES (
			#{ncitHistGuid},
			#{releaseGuid},
			#{entityCode},
			#{conceptName},
			#{editAction},
			#{editDate},
			#{referenceCode},
			#{referenceName}
			)
 	</insert>
		
</mapper>