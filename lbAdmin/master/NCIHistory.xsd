<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
        xmlns:lgCommon="http://LexGrid.org/schema/2010/01/LexGrid/commonTypes"
        xmlns="http://LexGrid.org/schema/2010/01/LexGrid/NCIHistory" targetNamespace="http://LexGrid.org/schema/2010/01/LexGrid/NCIHistory" elementFormDefault="qualified">
        <xs:import namespace="http://LexGrid.org/schema/2010/01/LexGrid/commonTypes" schemaLocation="commonTypes.xsd"/>

        <!-- ================================================= -->
        <!-- Package: <<XSDschema>> NCIChangeTypes  -->
        <!-- ================================================= -->
        <xs:annotation>
                <xs:documentation>
                        <h2>Version change definition for NCI change model</h2>
                </xs:documentation>
                <xs:documentation>The change type below is designed to be referenced in the changeInstructions portion of a codingScheme version when the source of the changes is NCI or equivalent. </xs:documentation>
        </xs:annotation>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Class: NCIChangeEvent  -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <xs:complexType name="NCIChangeEvent">
                <xs:annotation>
                        <xs:documentation> A change event as documented in ftp://ftp1.nci.nih.gov/pub/cacore/EVS/ReadMe_history.txt. Note that date and time of the change event is recorded in the containing version. All change events for the same/date and time a recorded in the same verison. </xs:documentation>
                </xs:annotation>
                <xs:attribute name="editaction" type="changeType" use="required">
                        <xs:annotation>
                                <xs:documentation>The activity being recorded (create, modify, split, merge, retire)</xs:documentation>
                        </xs:annotation>
                </xs:attribute>
                <xs:attribute name="conceptcode" type="lgCommon:entityCode" use="required">
                        <xs:annotation>
                                <xs:documentation>The unique, permanent, alphanumeric identifier of the concept</xs:documentation>
                        </xs:annotation>
                </xs:attribute>
                <xs:attribute name="conceptName" type="lgCommon:entityCode" use="required">
                        <xs:annotation>
                                <xs:documentation>The current text name of the concept. Typed as conceptCode because it serves that function.</xs:documentation>
                        </xs:annotation>
                </xs:attribute>
                <xs:attribute name="referencecode" type="lgCommon:entityCode">
                        <xs:annotation>
                                <xs:documentation>The identifier for a concept affected by or influencing the action, as detailed below</xs:documentation>
                        </xs:annotation>
                </xs:attribute>
                <xs:attribute name="referencename" type="lgCommon:entityCode">
                        <xs:annotation>
                                <xs:documentation>The current text name of the reference concept in all cases except concept name changes. For these, the referencename is the old name of the current concept. Reference codes are recorded in the following circumstances: Merges - In a merge, two concepts are merged into one. One of the two concepts survives and the other concept is retired. A merge history record is written for both of the concepts with a reference code of the surviving concept and
                                        a retire record is written for the concept that retires. In the case of A merging with B and A surviving, the history will appear as follows: C11111|A|merge|dd-mon-yy|C11111|A C22222|B|merge|dd-mon-yy|C11111|A C22222|B|retire|dd-mon-yy|(null)|(null) Splits - In a split, a single concept is split into two. The original concept survives and a new concept is generated. Two split records are written for the original concept with reference codes for the
                                        resulting concepts and a create history record is written for the new concept. In the case of A being split into A and B the history will appear as follows: C22222|B|create|dd-mon-yy|(null)|(null) C11111|A|split|dd-mon-yy|C22222|B C11111|A|split|dd-mon-yy|C11111|A Retires - In a retirement the concept is moved from it's old location in the tree hierarchy into the Retired_Kind. A retire record is written for the retiring concept with a reference code of the
                                        old superconcept. If a concept has multiple superconcepts, then a retire record is written for each reference. In the case of retiring concept A which has two superconcepts (B and C), the history will appear as follows: C11111|A|retire|dd-mon-yy|C22222|B C11111|A|retire|dd-mon-yy|C33333|C Concept Name Changes - When a history record is written, the current name of the concept is recorded in the history. We can match the conceptcode from the current
                                        Thesaurus against the conceptcodes in the history to determine if any conceptnames have changed. In the case of concept A having it's name changed to B, the history will appear as follows: C11111|B|modify|dd-mon-yy|(null)|A </xs:documentation>
                        </xs:annotation>
                </xs:attribute>
        </xs:complexType>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Class: changeType								   -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <xs:simpleType name="changeType">
                <xs:annotation>
                        <xs:documentation>Atomic modification actions. To be populated from a combination of Concordia, SNOMED-CT list and NCI's action list.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                        <xs:enumeration value="create">
                                <xs:annotation>
                                        <xs:documentation>Create a new concept.</xs:documentation>
                                </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="retire">
                                <xs:annotation>
                                        <xs:documentation>Retire a concept so that it can be referenced by identifier, but will not appear in searches for active concepts</xs:documentation>
                                </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="merge">
                                <xs:annotation>
                                        <xs:documentation>Two or more concepts were combined.</xs:documentation>
                                </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="split">
                                <xs:annotation>
                                        <xs:documentation>Concept was divided into two or more parts.</xs:documentation>
                                </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="modify">
                                <xs:annotation>
                                        <xs:documentation>One or more associations were removed</xs:documentation>
                                </xs:annotation>
                        </xs:enumeration>
                </xs:restriction>
        </xs:simpleType>

</xs:schema>
