<?xml version="1.0" encoding="UTF-8"?>
<!--W3C Schema generated by XMLSPY v5 rel. 4 U (http://www.xmlspy.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="VocabularyRevision">
		<xs:annotation>
			<xs:documentation>A cohesive collection of changes for a terminology</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="editDescription">
					<xs:annotation>
						<xs:documentation>A description of the intent and purpose of the vocabulary revision.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="proposalName"/>
							<xs:element ref="description"/>
							<xs:element ref="mainIssue"/>
							<xs:element ref="currentState"/>
							<xs:element ref="optionsConsidered"/>
							<xs:element ref="rational"/>
						</xs:sequence>
						<xs:attribute name="creationDate" type="xs:date" use="required"/>
						<xs:attribute name="proposalID" type="xs:string" use="required"/>
						<xs:attribute name="primaryContact" type="xs:string" use="required"/>
						<xs:attribute name="committee" type="xs:string" use="required"/>
						<xs:attribute name="documentStatus" default="Proposed">
							<xs:annotation>
								<xs:documentation>The current state of the proposition</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:NMTOKEN">
									<xs:enumeration value="Proposed"/>
									<xs:enumeration value="Submitted"/>
									<xs:enumeration value="Reviewed"/>
									<xs:enumeration value="Harmonized"/>
									<xs:enumeration value="Final"/>
									<xs:enumeration value="Rejected"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="editVersion" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Edit history</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="description" minOccurs="0"/>
						</xs:sequence>
						<xs:attribute name="changeDate" type="xs:date" use="required"/>
						<xs:attribute name="author" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
				<xs:choice maxOccurs="unbounded">
					<xs:element name="codingSchemeRevision">
						<xs:annotation>
							<xs:documentation>An addition or modification to a coding scheme.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:choice maxOccurs="unbounded">
								<xs:element name="selectCodingScheme">
									<xs:annotation>
										<xs:documentation>Modify the contents of an existing coding scheme.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="addCodesToCodingScheme" type="addCodesToCodingSchemeType"/>
												<xs:element name="addTextualPresentationToCode" type="addTextualPresentationToCodeType"/>
												<xs:element name="addPropertiesToCode" type="addPropertiesToCodeType"/>
												<xs:element name="updatePropertiesToCode" type="updatePropertiesToCodeType"/>
												<xs:element name="addConceptRelationship" type="addConceptRelationshipType"/>
												<xs:element name="addSourceToCodingScheme" type="addSourceToCodingSchemeType"/>
												<xs:element name="updateSourceToCodingScheme" type="updateSourceToCodingSchemeType"/>
												<xs:element name="addCopyrightToCodingScheme" type="addCopyrightToCodingSchemeType"/>
												<xs:element name="updateCopyrightToCodingScheme" type="updateCopyrightToCodingSchemeType"/>
												<xs:element name="addMappingToCodingScheme" type="addMappingToCodingSchemeType"/>
												<xs:element name="updateMappingToCodingScheme" type="updateMappingToCodingSchemeType"/>
												<xs:element name="addPropertyToCodingScheme" type="addPropertyToCodingSchemeType"/>
												<xs:element name="updatePropertyToCodingScheme" type="updatePropertyToCodingSchemeType"/>
												<xs:element name="removePropertyToCodingScheme" type="removePropertyToCodingSchemeType"/>
												<xs:element name="modifyCodingScheme">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
															<xs:element ref="description" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="codingSchemeLocalName" type="xs:string"/>
														<xs:attribute name="newOID" type="xs:string"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="updateCodePrintName">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="conceptCode" type="xs:string" use="required"/>
														<xs:attribute name="oldPrintName" type="xs:string" use="required"/>
														<xs:attribute name="newPrintName" type="xs:string"/>
														<xs:attribute name="languageCode" type="xs:string" default="en"/>
														<xs:attribute name="isPreferred" type="xs:boolean" default="true"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="updateCodeDescription">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
															<xs:sequence>
																<xs:element ref="oldDescription" minOccurs="0"/>
																<xs:element ref="newDescription"/>
															</xs:sequence>
														</xs:sequence>
														<xs:attribute name="conceptCode" type="xs:string" use="required"/>
														<xs:attribute name="conceptName" type="xs:string"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="moveCode">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="conceptCode" type="xs:string" use="required"/>
														<xs:attribute name="conceptName" type="xs:string"/>
														<xs:attribute name="fromParentCode" type="xs:string"/>
														<xs:attribute name="fromParentName" type="xs:string"/>
														<xs:attribute name="toParentCode" type="xs:string"/>
														<xs:attribute name="toParentName" type="xs:string"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="retireCode">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="conceptCode" type="xs:string" use="required"/>
														<xs:attribute name="conceptName" type="xs:string" use="required"/>
														<xs:attribute name="replacementCode" type="xs:string"/>
														<xs:attribute name="replacementName" type="xs:string"/>
														<xs:attribute name="completeDelete" type="xs:boolean"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="removeConceptRelationship">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="parentCodingSchemeFormalName" type="xs:string"/>
														<xs:attribute name="parentCode" type="xs:string" use="required"/>
														<xs:attribute name="parentName" type="xs:string"/>
														<xs:attribute name="association" type="xs:string" use="required"/>
														<xs:attribute name="targetCodingScheme" type="xs:string"/>
														<xs:attribute name="targetConcept" type="xs:string" use="required"/>
														<xs:attribute name="childName" type="xs:string"/>
													</xs:complexType>
												</xs:element>
											</xs:choice>
										</xs:sequence>
										<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="registerCodingScheme">
									<xs:annotation>
										<xs:documentation>Register a new coding scheme and contents.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
											<xs:element ref="description" minOccurs="0"/>
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="addCodesToCodingScheme" type="addCodesToCodingSchemeType"/>
												<xs:element name="addTextualPresentationToCode" type="addTextualPresentationToCodeType"/>
												<xs:element name="addPropertiesToCode" type="addPropertiesToCodeType"/>
												<xs:element name="addConceptRelationship" type="addConceptRelationshipType"/>
												<xs:element name="addSourceToCodingScheme" type="addSourceToCodingSchemeType"/>
												<xs:element name="addCopyrightToCodingScheme" type="addCopyrightToCodingSchemeType"/>
												<xs:element name="addMappingToCodingScheme" type="addMappingToCodingSchemeType"/>
												<xs:element name="addPropertyToCodingScheme" type="addPropertyToCodingSchemeType"/>
											</xs:choice>
										</xs:sequence>
										<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
										<xs:attribute name="codingSchemeFormalName" type="xs:string" use="required"/>
										<xs:attribute name="codingSchemeType" default="I">
											<xs:simpleType>
												<xs:restriction base="xs:NMTOKEN">
													<xs:enumeration value="E"/>
													<xs:enumeration value="I"/>
													<xs:enumeration value="EI"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
										<xs:attribute name="codingSchemeRegisteredName" type="xs:string"/>
										<xs:attribute name="defaultLanguage" type="xs:string"/>
										<xs:attribute name="representsVersion" type="xs:string"/>
										<xs:attribute name="isNative" type="xs:string"/>
										<xs:attribute name="approxNumConcepts" type="xs:string"/>
										<xs:attribute name="firstRelease" type="xs:string"/>
									</xs:complexType>
								</xs:element>
							</xs:choice>
						</xs:complexType>
					</xs:element>
					<xs:element name="valueDomainRevision">
						<xs:annotation>
							<xs:documentation>An addition or modification to a value domain.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:choice maxOccurs="unbounded">
								<xs:element name="selectValueDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="addCodesToValueDomain" type="addCodesToValueDomainType"/>
												<xs:element name="addValueDomainReferences" type="addValueDomainReferencesType"/>
												<xs:element name="addToVocabularyDomain" type="addToVocabularyDomainType"/>
												<xs:element name="addPropertyToValueDomain" type="addPropertyToValueDomainType"/>
												<xs:element name="updatePropertyToValueDomain" type="updatePropertyToValueDomainType"/>
												<xs:element name="removePropertyToValueDomain" type="removePropertyToValueDomainType"/>
												<xs:element name="addPropertiesToValueDomainEntry" type="addPropertiesToValueDomainEntryType"/>
												<xs:element name="updatePropertiesToValueDomainEntry" type="updatePropertiesToValueDomainEntryType"/>
												<xs:element name="deleteValueDomain">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="andVocabularyDomain" type="xs:boolean" default="false"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="modifyValueDomain">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
															<xs:element ref="oldDescription" minOccurs="0"/>
															<xs:element ref="newDescription" minOccurs="0"/>
														</xs:sequence>
														<xs:attribute name="newName" type="xs:string"/>
														<xs:attribute name="codingScheme" type="xs:string"/>
														<xs:attribute name="allCodes" type="xs:boolean"/>
														<xs:attribute name="headCode" type="xs:string"/>
														<xs:attribute name="headCodeName" type="xs:string"/>
													</xs:complexType>
												</xs:element>
												<xs:element name="removeCodesFromValueDomain">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
															<xs:element name="codeToRemove" maxOccurs="unbounded">
																<xs:complexType>
																	<xs:attribute name="conceptCode" type="xs:string" use="required"/>
																	<xs:attribute name="conceptName" type="xs:string"/>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
												<xs:element name="removeValueDomainReferences">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
															<xs:element name="removeReferenceTo" maxOccurs="unbounded">
																<xs:complexType>
																	<xs:attribute name="valueDomain" type="xs:string" use="required"/>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:choice>
										</xs:sequence>
										<xs:attribute name="setName" type="xs:string" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="createValueDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
											<xs:element ref="description" minOccurs="0"/>
											<xs:element name="underValueDomain" minOccurs="0">
												<xs:complexType>
													<xs:attribute name="setName" type="xs:string" use="required"/>
													<xs:attribute name="addAsType" use="required">
														<xs:simpleType>
															<xs:restriction base="xs:NMTOKEN">
																<xs:enumeration value="abstract"/>
																<xs:enumeration value="specializable"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:attribute>
												</xs:complexType>
											</xs:element>
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="addCodesToValueDomain" type="addCodesToValueDomainType"/>
												<xs:element name="addValueDomainReferences" type="addValueDomainReferencesType"/>
												<xs:element name="addToVocabularyDomain" type="addToVocabularyDomainType"/>
												<xs:element name="addPropertyToValueDomain" type="addPropertyToValueDomainType"/>
												<xs:element name="addPropertiesToValueDomainEntry" type="addPropertiesToValueDomainEntryType"/>
											</xs:choice>
										</xs:sequence>
										<xs:attribute name="valueDomain" type="xs:string" use="required"/>
										<xs:attribute name="defaultCodingScheme" type="xs:string" use="required"/>
										<xs:attribute name="allCodes" type="xs:boolean" default="false"/>
										<xs:attribute name="headCode" type="xs:string"/>
										<xs:attribute name="headCodePrintName" type="xs:string"/>
										<xs:attribute name="asVocabularyDomain" type="xs:boolean"/>
										<xs:attribute name="defaultLanguage" type="xs:string"/>
										<xs:attribute name="registeredName" type="xs:string"/>
										<xs:attribute name="representsVersion" type="xs:string"/>
										<xs:attribute name="representsRealmOrContext" type="xs:string"/>
										<xs:attribute name="source" type="xs:string"/>
										<xs:attribute name="supportedCodingScheme" type="xs:string"/>
										<xs:attribute name="supportedSource" type="xs:string"/>
										<xs:attribute name="supportedLanguage" type="xs:string"/>
										<xs:attribute name="supportedContext" type="xs:string"/>
										</xs:complexType>
								</xs:element>
							</xs:choice>
						</xs:complexType>
					</xs:element>
					<xs:element name="vocabularyDomainRevision">
						<xs:annotation>
							<xs:documentation>An addition or modification to a vocabulary domain.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:choice maxOccurs="unbounded">
								<xs:element name="createVocabularyDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
											<xs:element ref="description" minOccurs="0"/>
										</xs:sequence>
										<xs:attribute name="vocabularyDomain" type="xs:string" use="required"/>
										<xs:attribute name="restrictsDomain" type="xs:string"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="deleteVocabularyDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
										</xs:sequence>
										<xs:attribute name="vocabularyDomain" type="xs:string" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="renameVocabularyDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
										</xs:sequence>
										<xs:attribute name="vocabularyDomain" type="xs:string" use="required"/>
										<xs:attribute name="newDomainName" type="xs:string" use="required"/>
									</xs:complexType>
								</xs:element>
								<!-- RAH03 -->
								<xs:element name="moveVocabularyDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
										</xs:sequence>
										<xs:attribute name="vocabularyDomain" type="xs:string" use="required"/>
										<xs:attribute name="fromDomain" type="xs:string" use="optional"/>
										<xs:attribute name="toDomain" type="xs:string" use="optional"/>
									</xs:complexType>
								</xs:element>			
								<!-- RAH -->
								<xs:element name="defineVocabularyDomain">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
											<xs:element ref="newDescription"/>
										</xs:sequence>
										<xs:attribute name="vocabularyDomain" type="xs:string" use="required"/>
									</xs:complexType>
								</xs:element>
								<!-- Not implemented -->
								<!-- Not implemented -->
							</xs:choice>
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="addCodesToCodingSchemeType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:choice>
				<xs:element name="underCode" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="newCode" type="newCodeType" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="conceptCode" type="xs:string" use="required"/>
						<xs:attribute name="conceptName" type="xs:string"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="newCode" type="newCodeType" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addCodesToValueDomainType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element name="addPickListEntryToCode" type="addPickListEntryToCodeType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="codeAddition" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="conceptCode" type="xs:string" use="required"/>
					<xs:attribute name="conceptName" type="xs:string"/>
					<xs:attribute name="id" type="xs:string"/>
					<xs:attribute name="codingScheme" type="xs:string"/>
					<xs:attribute name="entryOrder" type="xs:string"/>
					<xs:attribute name="isSelectable" type="xs:string"/>
					<xs:attribute name="includeChildren" type="xs:string"/>
					<xs:attribute name="includesValueDomain" type="xs:string"/>
					<xs:attribute name="relationship" type="xs:string"/>
					<xs:attribute name="relInclusion" default="inclusive">
						<xs:simpleType>
							<xs:restriction base="xs:NMTOKEN">
								<xs:enumeration value="exclusive"/>
								<xs:enumeration value="inclusive"/>
								<xs:enumeration value="leafOnly"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addPickListEntryToCodeType">
		<xs:annotation>
			<xs:documentation>Add a new pick list entry to a to a concept code in the selected value domain </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required"/>
		<xs:attribute name="codingScheme" type="xs:string" use="required"/>
		<xs:attribute name="conceptCode" type="xs:string" use="required"/>
		<xs:attribute name="isDefault" type="xs:boolean" default="true"/>
		<xs:attribute name="matchIfNoContext" type="xs:string"/>
		<xs:attribute name="language" type="xs:string"/>
		<xs:attribute name="pickText" type="xs:string"/>
		<xs:attribute name="usageContext" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="addConceptRelationshipType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="parentCodingSchemeFormalName" type="xs:string"/>
		<xs:attribute name="parentCode" type="xs:string" use="required"/>
		<xs:attribute name="parentName" type="xs:string"/>
		<xs:attribute name="association" type="xs:string" use="required"/>
		<xs:attribute name="targetCodingScheme" type="xs:string"/>
		<xs:attribute name="targetConcept" type="xs:string" use="required"/>
		<xs:attribute name="childName" type="xs:string"/>
		<xs:attribute name="entityDescription" type="xs:string"/>
		<xs:attribute name="forwardName" type="xs:string"/>
		<xs:attribute name="reverseName" type="xs:string"/>
		<xs:attribute name="inverse" type="xs:string"/>
		<xs:attribute name="assocEntityDescription" type="xs:string"/>
		<xs:attribute name="associationQualification" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="addTextualPresentationToCodeType">
		<xs:annotation>
			<xs:documentation>Add a new textual presentation to a to a concept code in the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="conceptCode" type="xs:string" use="required"/>
		<xs:attribute name="presentationText" type="xs:string"/>
		<xs:attribute name="newPresentationText" type="xs:string" use="required"/>
		<xs:attribute name="languageCode" type="xs:string" default="en"/>
		<xs:attribute name="isPreferred" type="xs:boolean" default="true"/>
	</xs:complexType>
	<xs:complexType name="addPropertyToCodeType">
		<xs:annotation>
			<xs:documentation>Add a property to a concept code in the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element name="propertyName" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="conceptCode" type="xs:string" use="required"/>
		<xs:attribute name="conceptName" type="xs:string"/>
		<xs:attribute name="propertyText" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" default="en"/>
		<xs:attribute name="usageContext" type="xs:string"/>
		<xs:attribute name="qualifier" type="xs:string"/>
		<xs:attribute name="category">
			<xs:simpleType>
				<xs:restriction base="xs:NMTOKEN">
					<xs:enumeration value="presentation"/>
					<xs:enumeration value="definition"/>
					<xs:enumeration value="comment"/>
					<xs:enumeration value="instruction"/>
					<xs:enumeration value="conceptProperty"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="addToVocabularyDomainType">
		<xs:annotation>
			<xs:documentation>Add the selected value domain to the named vocabulary domain in the selected (optional) context</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="vocabularyDomain" type="xs:string" use="required"/>
		<xs:attribute name="context" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="addValueDomainReferencesType">
		<xs:annotation>
			<xs:documentation>Create references from the selected value domain to the sets listed below</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element name="listEntry" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="setName" type="xs:string" use="required"/>
					<xs:attribute name="setType" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:NMTOKEN">
								<xs:enumeration value="abstract"/>
								<xs:enumeration value="specializable"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ballotStatusType">
		<xs:annotation>
			<xs:documentation>The status of a given change within the HL7 organizational structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="note" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Notes, etc. about the current ballot state, decisions and the like.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="action" default="Proposed">
			<xs:annotation>
				<xs:documentation>The current state of the proposition</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:NMTOKEN">
					<xs:enumeration value="Proposed"/>
					<xs:enumeration value="Passed"/>
					<xs:enumeration value="PassedWithChanges"/>
					<xs:enumeration value="Tabled"/>
					<xs:enumeration value="Withdrawn"/>
					<xs:enumeration value="NonVotingItem"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="vote">
			<xs:annotation>
				<xs:documentation>Vote is in the format yy-nn-aa where: yy is yes votes nn is no votes aa is abstention votes </xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="[0-9]+-[0-9]+-[0-9]+"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="proposalName" type="xs:string">
		<xs:annotation>
			<xs:documentation>A textual definition or description</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="description" type="xs:string">
		<xs:annotation>
			<xs:documentation>A textual definition or description</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="mainIssue" type="xs:string">
		<xs:annotation>
			<xs:documentation>A textual definition or description</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="currentState" type="xs:string">
		<xs:annotation>
			<xs:documentation>A textual definition or description</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="optionsConsidered" type="xs:string">
		<xs:annotation>
			<xs:documentation>A textual definition or description</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="rational" type="xs:string">
		<xs:annotation>
			<xs:documentation>A textual definition or description</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="oldDescription" type="xs:string"/>
	<xs:element name="newDescription" type="xs:string"/>
	<xs:complexType name="newCodeType">
		<xs:annotation>
			<xs:documentation>A new coded entry in a coding scheme. May be nested</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="description" minOccurs="0"/>
			<xs:element name="newCode" type="newCodeType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="conceptCode" type="xs:string" use="required"/>
		<xs:attribute name="conceptName" type="xs:string" use="required"/>
		<xs:attribute name="isActive" type="xs:string"/>
		<xs:attribute name="conceptStatus" type="xs:string"/>
		<xs:attribute name="isAnonymous" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="addSourceToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Add a Source to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="source" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="updateSourceToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Update an existing Source to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="oldSource" type="xs:string" use="required"/>
		<xs:attribute name="newSource" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="addCopyrightToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Add a Copyright to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="copyright" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="updateCopyrightToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Update a Copyright to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="oldCopyright" type="xs:string" use="required"/>
		<xs:attribute name="newCopyright" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="addMappingToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Add a mapping to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="supportedLanguage" type="xs:string" use="required"/>
		<xs:attribute name="supportedFormat" type="xs:string" use="required"/>
		<xs:attribute name="supportedProperty" type="xs:string" use="required"/>
		<xs:attribute name="supportedCodingScheme" type="xs:string" use="required"/>
		<xs:attribute name="supportedSource" type="xs:string" use="required"/>
		<xs:attribute name="supportedAssociation" type="xs:string" use="required"/>
		<xs:attribute name="supportedContext" type="xs:string" use="required"/>
		<xs:attribute name="supportedAssociationQualifier" type="xs:string" use="required"/>
		<xs:attribute name="supportedConceptStatus" type="xs:string" use="required"/>
		<xs:attribute name="supportedRepresentationalForm" type="xs:string" use="required"/>
		<xs:attribute name="supportedPropertyLink" type="xs:string" use="required"/>
		<xs:attribute name="supportedDegreeOfFidelity" type="xs:string" use="required"/>
		<xs:attribute name="supportedPropertyQualifier" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="updateMappingToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Update a mapping to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedLanguage" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedLanguage" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedFormat" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedFormat" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedProperty" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedProperty" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedCodingScheme" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedCodingScheme" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedSource" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedSource" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedAssociation" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedAssociation" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedContext" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedContext" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedAssociationQualifier" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedAssociationQualifier" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedConceptStatus" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedConceptStatus" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedRepresentationalForm" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedRepresentationalForm" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedPropertyLink" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedPropertyLink" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedDegreeOfFidelity" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedDegreeOfFidelity" type="xs:string" use="required"/>
		<xs:attribute name="newSupportedPropertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="oldSupportedPropertyQualifier" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="addPropertyToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Add a property to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="property" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" use="required"/>
		<xs:attribute name="presentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="source" type="xs:string" use="required"/>
		<xs:attribute name="usageContext" type="xs:string" use="required"/>
		<xs:attribute name="propertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="text" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="updatePropertyToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Update a property to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="oldProperty" type="xs:string" use="required"/>
		<xs:attribute name="newProperty" type="xs:string" use="required"/>
		<xs:attribute name="oldLanguage" type="xs:string" use="required"/>
		<xs:attribute name="newLanguage" type="xs:string" use="required"/>
		<xs:attribute name="oldPresentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="newPresentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="oldSource" type="xs:string" use="required"/>
		<xs:attribute name="newSource" type="xs:string" use="required"/>
		<xs:attribute name="oldUsageContext" type="xs:string" use="required"/>
		<xs:attribute name="newUsageContext" type="xs:string" use="required"/>
		<xs:attribute name="oldPropertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="newPropertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="oldText" type="xs:string" use="required"/>
		<xs:attribute name="newText" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="removePropertyToCodingSchemeType">
		<xs:annotation>
			<xs:documentation>Remove a property to the selected coding scheme </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="codingSchemeLocalName" type="xs:string" use="required"/>
		<xs:attribute name="property" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" use="required"/>
		<xs:attribute name="presentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="source" type="xs:string" use="required"/>
		<xs:attribute name="usageContext" type="xs:string" use="required"/>
		<xs:attribute name="propertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="text" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="addPropertiesToCodeType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:choice>
				<xs:element name="addPropertyToCode" type="addPropertyToCodeType" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="updatePropertiesToCodeType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:choice>
				<xs:element name="addPropertyToCode" type="addPropertyToCodeType" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addPropertyToValueDomainType">
		<xs:annotation>
			<xs:documentation>Add a property to the selected value domain </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="valueDomainLocalName" type="xs:string" use="required"/>
		<xs:attribute name="property" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" use="required"/>
		<xs:attribute name="presentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="source" type="xs:string" use="required"/>
		<xs:attribute name="usageContext" type="xs:string" use="required"/>
		<xs:attribute name="propertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="text" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="updatePropertyToValueDomainType">
		<xs:annotation>
			<xs:documentation>Update a property on the selected value domain </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="valueDomainLocalName" type="xs:string" use="required"/>
		<xs:attribute name="oldProperty" type="xs:string" use="required"/>
		<xs:attribute name="newProperty" type="xs:string" use="required"/>
		<xs:attribute name="oldLanguage" type="xs:string" use="required"/>
		<xs:attribute name="newLanguage" type="xs:string" use="required"/>
		<xs:attribute name="oldPresentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="newPresentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="oldSource" type="xs:string" use="required"/>
		<xs:attribute name="newSource" type="xs:string" use="required"/>
		<xs:attribute name="oldUsageContext" type="xs:string" use="required"/>
		<xs:attribute name="newUsageContext" type="xs:string" use="required"/>
		<xs:attribute name="oldPropertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="newPropertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="oldText" type="xs:string" use="required"/>
		<xs:attribute name="newText" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="removePropertyToValueDomainType">
		<xs:annotation>
			<xs:documentation>Remove a property on the selected value domain </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element ref="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="valueDomainLocalName" type="xs:string" use="required"/>
		<xs:attribute name="property" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" use="required"/>
		<xs:attribute name="presentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="source" type="xs:string" use="required"/>
		<xs:attribute name="usageContext" type="xs:string" use="required"/>
		<xs:attribute name="propertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="text" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="addPropertyToValueDomainEntryType">
		<xs:annotation>
			<xs:documentation>Add a property to an entry  in the selected value domain </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:element name="propertyName" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="conceptCode" type="xs:string" use="required"/>
		<xs:attribute name="conceptName" type="xs:string"/>
		<xs:attribute name="property" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" use="required"/>
		<xs:attribute name="presentationFormat" type="xs:string" use="required"/>
		<xs:attribute name="source" type="xs:string" use="required"/>
		<xs:attribute name="usageContext" type="xs:string" use="required"/>
		<xs:attribute name="propertyQualifier" type="xs:string" use="required"/>
		<xs:attribute name="text" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="addPropertiesToValueDomainEntryType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:choice>
				<xs:element name="addPropertyToValueDomainEntry" type="addPropertyToValueDomainEntryType" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="updatePropertiesToValueDomainEntryType">
		<xs:sequence>
			<xs:element name="ballotStatus" type="ballotStatusType" minOccurs="0"/>
			<xs:choice>
				<xs:element name="addPropertyToValueDomainEntry" type="addPropertyToValueDomainEntryType" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
